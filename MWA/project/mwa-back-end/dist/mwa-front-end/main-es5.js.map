{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/advertise/advertise.component.ts","webpack:///src/app/advertise/advertise.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/following/following.component.ts","webpack:///src/app/following/following.component.html","webpack:///src/app/home-admin/home-admin.component.ts","webpack:///src/app/home-admin/home-admin.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/manage-user/manage-user.component.ts","webpack:///src/app/manage-user/manage-user.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/notfound/notfound.component.ts","webpack:///src/app/notfound/notfound.component.html","webpack:///src/app/posts/posts.component.ts","webpack:///src/app/posts/posts.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/request-activate/request-activate.component.ts","webpack:///src/app/request-activate/request-activate.component.html","webpack:///src/app/sample-wish/sample-wish.component.ts","webpack:///src/app/sample-wish/sample-wish.component.html","webpack:///src/app/service/advertisement/advertisement.service.ts","webpack:///src/app/service/login/login.service.ts","webpack:///src/app/service/news/news.service.ts","webpack:///src/app/service/post/post.service.ts","webpack:///src/app/service/unhealthyword/unhealthyword.service.ts","webpack:///src/app/service/user/user.service.ts","webpack:///src/app/table/table.component.ts","webpack:///src/app/table/table.component.html","webpack:///src/app/user-details/user-details.component.ts","webpack:///src/app/user-details/user-details.component.html","webpack:///src/app/user-operation/user-operation.component.ts","webpack:///src/app/user-operation/user-operation.component.html","webpack:///src/app/userblock/userblock.component.ts","webpack:///src/app/userblock/userblock.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdvertiseComponent","advService","advertisementList","getAdvertisement","birthday","localStorage","getItem","country","bithDayDate","Date","ageDifYear","getFullYear","subscribe","data","console","log","JSON","stringify","error","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","appRoutes","path","component","children","AppModule","declarations","providers","bootstrap","FollowingComponent","userService","noresult","showResult","followed","followText","header","token","username","_id","searchForm","searchname","getFollowingList","followers","i","length","flwdFlg","formData","searchUser","searchResult","get","searchUserName","HomeAdminComponent","service","router","form","imgUrl","description","minAge","linkUrl","register","navigate","formErrorMessage","formError","newAdvertisement","HomeComponent","route","isAdmin","admin","activateRequest","isEnabled","currPage","ManageUserComponent","inactiveUsersList","getInactiveUsers","getInactiveUser","item","activeUserPost","NavbarComponent","notLoggedIn","password","x","login","tokenData","disabledUser","punishedUser","setItem","loginFailed","NewsComponent","newsService","userservice","photoName","ItemsArray","postname","searchform","searchpost","searchPost","t","undefined","push","posts","allPosts","shift","getPosts","getUnhealthyWord","alert","concat","isUnhealthyWord","file","uploadData","FormData","append","name","submitPost","event","target","files","photoUploadFlg","increaseBadPost","newPost","onFileChange","onScroll","NotfoundComponent","PostsComponent","postService","commentError","toString","postId","submitUnlike","postsArr","post","likes","liked","submitLike","commentData","comment","sendComment","map","comments","RegisterComponent","email","RequestActivateComponent","activateAcc","sendRequestActivatePost","removeItem","requestActivate","SampleWishComponent","AdvertisementService","http","advertisementUrl","pipe","handleError","years","providedIn","LoginService","loginUrl","registerUrl","disabledUserUrl","headers","NewsService","postUrl","searchPostUrl","PostService","submitCommentUrl","submitLikeUrl","submitUnlikeUrl","UnhelthyWordService","unhealthyWordUrl","deteteUnhealthyWordUrl","UserService","getUserDataUrl","searchUserUrl","addFollowerUrl","getFollowerUrl","postUnfollowUrl","updateBadpostUrl","inactiveUserUrl","activeUserpostUrl","sendRequestActivatePostUrl","follower","unfollowed","unfollow","TableComponent","unhealthyWord","deleteUnhealthyWord","newHealthyWord","imageUploadUrl","UserDetailsComponent","photoBaseUrl","myForm","fileSource","getUserDetails","photoUploadUrl","uploader","url","itemAlias","onAfterAddingFile","withCredentials","onCompleteItem","response","status","getUserData","userDetails","UserOperationComponent","showUsername","changeToUserDetails","logout","UserblockComponent","addFollower","index","users","WelcomeComponent","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACA;;AACE;;AAAyC;;AAAsC;;AACjF;;AACA;;AACE;;AAAyC;;AAAoB;;AAC/D;;AACF;;;;;;AALO;;AAAA;;AAAuD;;AAAA;;AAGvD;;AAAA;;AAAsC;;AAAA;;;;QDGhCC,kB;AACX,kCAAoBC,UAApB,EAAsD;AAAA;;AAAlC,aAAAA,UAAA,GAAAA,UAAA;AAEpB,aAAAC,iBAAA,GAAkB,EAAlB;AAFwD;;;;mCAIhD;AACN,eAAKC,gBAAL;AACD;;;2CAEkB;AAAA;;AACjB,cAAIC,QAAQ,GAAG,uCAAU,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CF,QAAzD;AACA,cAAIG,OAAO,GAAG,uCAAU,CAACF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CC,OAAxD;AACA,cAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASL,QAAT,CAAlB;AAEA,cAAIM,UAAU,GAAG,IAAID,IAAJ,GAAWE,WAAX,KAA2BH,WAAW,CAACG,WAAZ,EAA5C;AAEA,eAAKV,UAAL,CAAgBE,gBAAhB,CAAiCI,OAAjC,EAA0CG,UAA1C,EAAsDE,SAAtD,CACE,UAACC,IAAD,EAAU;AACR,iBAAI,CAACX,iBAAL,GAAyBW,IAAI,CAAC,eAAD,CAA7B;AACAC,mBAAO,CAACC,GAAR,CAAY,2BAA0BC,IAAI,CAACC,SAAL,CAAe,KAAI,CAACf,iBAApB,CAAtC;AACD,WAJH,EAKE,UAACgB,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAPH;AASD;;;;;;;uBAzBUlB,kB,EAAkB,kK;AAAA,K;;;YAAlBA,kB;AAAkB,gC;AAAA,c;AAAA,a;AAAA,iK;AAAA;AAAA;ACT/B;;;;AAAmC;;;;;;;;;sEDStBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTmB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERxB,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4B,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,eAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTP,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzxB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADwB,EAExB;AACED,UAAI,EAAE,MADR;AAEEC,eAAS,EAAE,kEAFb;AAGEC,cAAQ,EAAE,CACR;AAAEF,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OADQ,EAER;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OAFQ,EAGR;AAAED,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE;AAA3B,OAHQ,EAIR;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAJQ,EAKR;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OALQ,EAMR;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OANQ,EAOR;AAAED,YAAI,EAAE,kBAAR;AAA4BC,iBAAS,EAAE;AAAvC,OAPQ;AAHZ,KAFwB,EAgBxB;AACA;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAjBwB,CAA1B;;QAwDaE,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,8DAAaR,OAAb,CAAqBI,SAArB,CANO,EAOP,iEAPO,EAQP,yEARO,CAUI;;;;0HAGFI,S,EAAS;AAAA,uBAjClB,2DAiCkB,EAhClB,wEAgCkB,EA/BlB,8EA+BkB,EA9BlB,2EA8BkB,EA7BlB,kEA6BkB,EA5BlB,+EA4BkB,EA3BlB,uFA2BkB,EA1BlB,mEA0BkB,EAzBlB,oFAyBkB,EAxBlB,sEAwBkB,EAvBlB,gGAuBkB,EAtBlB,kFAsBkB,EApBlB,0FAoBkB,EAnBlB,kFAmBkB,EAlBlB,sEAkBkB,EAjBlB,kFAiBkB,EAhBlB,uFAgBkB,EAflB,sGAekB;AAfM,kBAGxB,uEAHwB,EAIxB,oEAJwB,EAKxB,0DALwB,EAMxB,kEANwB,EAOxB,qEAPwB,EAOR,6DAPQ,EASxB,iEATwB,EAUxB,yEAVwB;AAeN,O;AALE,K;;;;;sEAKXA,S,EAAS;cAnCrB,sDAmCqB;eAnCZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,8EAHY,EAIZ,2EAJY,EAKZ,kEALY,EAMZ,+EANY,EAOZ,uFAPY,EAQZ,mEARY,EASZ,oFATY,EAUZ,sEAVY,EAWZ,gGAXY,EAYZ,kFAZY,EAcZ,0FAdY,EAeZ,kFAfY,EAgBZ,sEAhBY,EAiBZ,kFAjBY,EAkBZ,uFAlBY,EAmBZ,sGAnBY,CADN;AAsBRR,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,8DAAaD,OAAb,CAAqBI,SAArB,CANO,EAOP,iEAPO,EAQP,yEARO,CAtBD;AAgCRM,mBAAS,EAAE,EAhCH;AAiCRC,mBAAS,EAAE,CAAC,2DAAD;AAjCH,S;AAmCY,Q;;;;;;;;;;;;;;;;;;ACvFtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBQ;;AACE;;AAAiC;;AAAS;;AAC5C;;;;;;AAKF;;AACE;;AAAI;;AAAc;;AAClB;;AACF;;;;;;AADa;;AAAA;;;;QDhBNC,kB;AAYX,kCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AARpB,aAAAC,QAAA,GAAoB,KAApB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AAEA,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,UAAA,GAAa,QAAb;AAKE,aAAKC,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAAEC,eAAK,EAAEtC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAT,SAAhB,CAAd;AACA,aAAKsC,QAAL,GAAgB,uCAAU,CAACvC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CsC,QAA1D;AACA,aAAKC,GAAL,GAAW,uCAAU,CAACxC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CuC,GAArD;AACA,aAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BC,oBAAU,EAAE,IAAI,0DAAJ;AADkB,SAAd,CAAlB;AAGD;;;;2CAEkB;AAAA;;AACjB,eAAKV,WAAL,CAAiBW,gBAAjB,CAAkC,KAAKN,MAAvC,EAA+C9B,SAA/C,CACE,UAACC,IAAD,EAAU;AACR;AACA,kBAAI,CAACoC,SAAL,GAAiBpC,IAAI,CAAC,WAAD,CAArB;;AACA,iBAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACD,SAAL,CAAeE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,oBAAI,CAACD,SAAL,CAAeC,CAAf,EAAkBE,OAAlB,GAA4B,IAA5B;AACD;AACF,WAPH,EAQE,UAAClC,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAVH;AAYD;;;uCAMcmC,Q,EAAU;AAAA;;AACvB,eAAKhB,WAAL,CAAiBiB,UAAjB,CAA4BD,QAA5B,EAAsC,KAAKX,MAA3C,EAAmD9B,SAAnD,CACE,UAACC,IAAD,EAAU;AACR,gBAAIA,IAAI,CAAC,OAAD,CAAJ,CAAcsC,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,oBAAI,CAACb,QAAL,GAAgB,CAAC,MAAI,CAACA,QAAtB,CAD6B,CAE7B;AACD,aAHD,MAGO;AACL,oBAAI,CAACiB,YAAL,GAAoB1C,IAAI,CAAC,OAAD,CAAxB;AACA,oBAAI,CAACyB,QAAL,GAAgB,KAAhB;AACA,oBAAI,CAACC,UAAL,GAAkB,IAAlB;AACD;AACF,WAVH,EAWE,UAACrB,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAbH;AAeD,S,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;mCAEQ;AACN,eAAK8B,gBAAL;AACD;;;4BAvCgB;AACf,iBAAO,KAAKF,UAAL,CAAgBU,GAAhB,CAAoB,YAApB,CAAP;AACD;;;;;;;uBAtCUpB,kB,EAAkB,uI;AAAA,K;;;YAAlBA,kB;AAAkB,gC;AAAA,e;AAAA,a;AAAA,sW;AAAA;AAAA;ACX/B;;AACE;;AACE;;AACE;;AAEE;AAAA,mBAAY,IAAAqB,cAAA,sBAAZ;AAA4C,WAA5C;;AAEA;;AACE;;AAOF;;AAEA;;AAA8C;;AAAM;;AACpD;;AAGF;;AACF;;AACA;;AAEE;;AA+BF;;AACA;;AACE;;AAAI;;AAAc;;AAClB;;AACF;;AACF;;AACF;;;;AA1DQ;;AAAA;;AAcK;;AAAA;;AAOF;;AAAA;;AAkCM;;AAAA;;;;;;;;;sEDhDJrB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTjB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaqC,kB;AAKX,kCAAoBC,OAApB,EAA2DC,MAA3D,EAA2E;AAAA;;AAAvD,aAAAD,OAAA,GAAAA,OAAA;AAAuC,aAAAC,MAAA,GAAAA,MAAA;AACzD,aAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADgB;AAExBC,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFW;AAGxBC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHgB;AAIxBzD,iBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJe;AAKxB0D,iBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AALe,SAAd,CAAZ;AAOD,O,CACH;;;;;mCACU,CAAW;;;yCAEFZ,Q,EAAU;AAAA;;AACzBvC,iBAAO,CAACC,GAAR,CAAY,iBAAeC,IAAI,CAACC,SAAL,CAAeoC,QAAf,CAA3B;AACA,eAAKM,OAAL,CAAaO,QAAb,CAAsBb,QAAtB,EAAgCzC,SAAhC,CACE,UAACC,IAAD,EAAU;AACR,kBAAI,CAAC+C,MAAL,CAAYO,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,WAHH,EAIE,UAACjD,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,kBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,kBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WARH;AAUD;;;;;;;uBA7BUX,kB,EAAkB,kK,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,iC;AAAA,e;AAAA,a;AAAA,ghC;AAAA;AAAA;ACX/B;;AACE;;AACE;;AAAI;;AAAa;;AACjB;;AAEE;AAAA,mBAAY,IAAAY,gBAAA,gBAAZ;AAAwC,WAAxC;;AAEA;;AACE;;AACE;;AAAO;;AAAU;;AACjB;;AAOF;;AACA;;AACE;;AAAO;;AAAY;;AACnB;;AAMF;;AACA;;AACE;;AAAO;;AAAS;;AAChB;;AAOF;;AACA;;AACA;;AACE;;AAAO;;AAAY;;AACnB;;AACF;;AAEA;;AACE;;AAAO;;AAAQ;;AACf;;AACE;;AAA6B;;AAAG;;AAChC;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC3B;;AAAwB;;AAAO;;AAC/B;;AAAuB;;AAAM;;AAC7B;;AAAqB;;AAAI;;AACzB;;AAA2B;;AAAU;;AACrC;;AAAyB;;AAAQ;;AACjC;;AAAuB;;AAAM;;AAC7B;;AAAwB;;AAAO;;AAC/B;;AAAsB;;AAAK;;AAC3B;;AAAuB;;AAAM;;AAC7B;;AAAyC;;AAAwB;;AACnE;;AACF;;AACF;;AACE;;AACE;;AAA8C;;AAAI;;AACpD;;AACF;;AACF;;AACF;;AACF;;;;AAhEM;;AAAA;;;;;;;;;sEDOOZ,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTvC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQI;;AACE;;AACF;;;;QDDSkD,a;AAGX,6BACUZ,OADV,EAEUC,MAFV,EAGUY,KAHV,EAG+B;AAAA;;AAFrB,aAAAb,OAAA,GAAAA,OAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAY,KAAA,GAAAA,KAAA;AAJV,aAAAC,OAAA,GAAUpE,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAmC,MAAnC,GAA4C,IAA5C,GAAmD,KAA7D;AAKI;;;;mCAEI;AACN,cAAIqC,KAAK,GAAGtC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,cAAIoE,KAAK,GAAGrE,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;AACA,cAAIqE,eAAe,GAAGtE,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAtB;AACA,cAAIsE,SAAS,GAAGvE,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAhB;AACAQ,iBAAO,CAACC,GAAR,CAAY,eAAa6D,SAAzB;;AAEA,cAAIjC,KAAJ,EAAW;AACT,gBAAI+B,KAAK,KAAK,MAAd,EAAsB;AACpB,mBAAKd,MAAL,CAAYO,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,aAFD,MAEO,IAAGS,SAAS,KAAK,MAAjB,EAAwB;AAC7B,mBAAKhB,MAAL,CAAYO,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,aAFM,MAEA,IAAGQ,eAAe,KAAK,OAAvB,EAA+B;AACpC,mBAAKf,MAAL,CAAYO,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,aAFM,MAGA,CAEN;;AACD,iBAAKU,QAAL,GAAgB,MAAhB;AACD,WAZD,MAYO;AACL,iBAAKjB,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF,S,CAED;;;;mCACW;AACT,iBAAO,KAAKM,OAAL,GAAe,OAAf,GAAwB,OAA/B;AACD;;;;;;;uBApCUF,a,EAAa,0I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAbA,a;AAAa,2B;AAAA,c;AAAA,a;AAAA,uH;AAAA;AAAA;ACT1B;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AAGF;;AACF;;;;AAPS;;AAAA;;AAGc;;AAAA;;;;;;;;;sEDCVA,a,EAAa;cALzB,uDAKyB;eALf;AACTpD,kBAAQ,EAAE,MADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBK;;AACG;;AAA0B;;AAAc;;AACxC;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AACC;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AAAM;;AACxE;;AACH;;;;;;AAR6B;;AAAA;;AACtB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDVCyD,mB;AAOX,mCAAoBnB,OAApB,EAAkDC,MAAlD,EAAkE;AAAA;;AAA9C,aAAAD,OAAA,GAAAA,OAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAHlD,aAAAmB,iBAAA,GAAoB,EAApB;AAIE,aAAKlB,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADgB;AAExBC,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFW;AAGxBC,gBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHgB;AAIxBzD,iBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAJe,SAAd,CAAZ;AAMD,O,CACH;;;;;mCACU;AACN,eAAKyE,gBAAL;AACD;;;2CAEkB;AAAA;;AACjB,eAAKrB,OAAL,CAAasB,eAAb,GAA+BrE,SAA/B,CACE,UAACC,IAAD,EAAU;AACR,kBAAI,CAACkE,iBAAL,GAAyBlE,IAAI,CAAC,eAAD,CAA7B;AACAC,mBAAO,CAACC,GAAR,CAAY,uBAAsBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;AACD,WAJH,EAKE,UAACK,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAPH;AASD;;;wCAEegE,I,EAAM;AAAA;;AACpB;AACA,eAAKvB,OAAL,CAAawB,cAAb,CAA4BD,IAAI,CAAC,KAAD,CAAhC,EAAyCtE,SAAzC,CACE,UAACC,IAAD,EAAU;AACR,kBAAI,CAACmE,gBAAL;AACD,WAHH,EAIE,UAAC9D,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,kBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,kBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WARH;AAUD;;;;;;;uBA5CUS,mB,EAAmB,uI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,kC;AAAA,e;AAAA,a;AAAA,wM;AAAA;AAAA;ACXhC;;AACE;;AACE;;AAAI;;AAAc;;AACpB;;AACF;;AACA;;AACE;;AACG;;AACG;;AAA0B;;AAAG;;AAC7B;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AAAI;;AAAY;;AACnB;;AACH;;AACA;;AACG;;AAUH;;AACF;;;;AAXS;;AAAA;;;;;;;;;sEDLIA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT3D,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8EM;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;QD1EO+D,e;AASX,+BAAoBxB,MAApB,EAA4CD,OAA5C,EAAmE;AAAA;;AAA/C,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAD,OAAA,GAAAA,OAAA;AAL5C,aAAA0B,WAAA,GAAc,IAAd;AAME,aAAKxB,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBjB,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADc;AAExB0C,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFc,SAAd,CAAZ;AAID;;;;mCAEU;AACT,cAAIjF,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1C,iBAAKsD,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WAFD,MAEO;AACL,iBAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACF;;;4BAQGoB,C,EAAG;AACLzE,iBAAO,CAACC,GAAR,CAAYwE,CAAZ;AACD;;;8BAEKlC,Q,EAAU;AAAA;;AACd,eAAKM,OAAL,CAAa6B,KAAb,CAAmBnC,QAAnB,EAA6BzC,SAA7B,CACE,UAACC,IAAD,EAAU;AACR,gBAAM4E,SAAS,GAAG,uCAAU,CAAC5E,IAAI,CAAC,OAAD,CAAL,CAA5B;AACAC,mBAAO,CAACC,GAAR,CAAY,0BAAwB0E,SAAS,CAAC,WAAD,CAA7C;;AACA,gBAAGA,SAAS,CAAC,WAAD,CAAZ,EAA0B;AACxB,kBAAGA,SAAS,CAAC,cAAD,CAAT,GAA4B,EAA/B,EAAkC;AAAC;AAC/B,sBAAI,CAAC/C,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAACC,uBAAK,EAAE9B,IAAI,CAAC,OAAD;AAAZ,iBAAhB,CAAd;;AACA,sBAAI,CAAC8C,OAAL,CAAa+B,YAAb,CAA0B,MAAI,CAAChD,MAA/B,EAAuC9B,SAAvC,CACE,UAACC,IAAD,EAAU;AACT,wBAAI,CAAC8E,YAAL,GAAoB,IAApB;AACA,iBAHH,EAII,UAACzE,KAAD,EAAW;AACXJ,yBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,iBANH;AAOC,eATL,MASW;AACP;AACAb,4BAAY,CAACuF,OAAb,CAAqB,OAArB,EAA8B/E,IAAI,CAAC,OAAD,CAAlC;AACAR,4BAAY,CAACuF,OAAb,CAAqB,SAArB,EAAgCH,SAAS,CAAChB,OAA1C;AACApE,4BAAY,CAACuF,OAAb,CAAqB,WAArB,EAAkCH,SAAS,CAAC,WAAD,CAA3C;AACApF,4BAAY,CAACuF,OAAb,CAAqB,iBAArB,EAAwCH,SAAS,CAAC,iBAAD,CAAjD;;AACA,sBAAI,CAAC7B,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACJ;;AAAC,gBAAG,CAACsB,SAAS,CAAC,iBAAD,CAAb,EAAiC;AACjCpF,0BAAY,CAACuF,OAAb,CAAqB,SAArB,EAAgCH,SAAS,CAAChB,OAA1C;AACApE,0BAAY,CAACuF,OAAb,CAAqB,OAArB,EAA8B/E,IAAI,CAAC,OAAD,CAAlC;AACAR,0BAAY,CAACuF,OAAb,CAAqB,iBAArB,EAAwCH,SAAS,CAAC,iBAAD,CAAjD;AACApF,0BAAY,CAACuF,OAAb,CAAqB,WAArB,EAAkCH,SAAS,CAAC,WAAD,CAA3C;;AACA,oBAAI,CAAC7B,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aANC,MAOK;AACL,oBAAI,CAACS,SAAL,GAAiB,IAAjB;AACD;AACF,WAhCH,EAiCE,UAAC1D,KAAD,EAAW;AACT;AACA,kBAAI,CAAC2E,WAAL,GAAmB,IAAnB;AACD,WApCH;AAsCD;;;4BAjDc;AACb,iBAAO,KAAKhC,IAAL,CAAUL,GAAV,CAAc,UAAd,CAAP;AACD;;;4BACc;AACb,iBAAO,KAAKK,IAAL,CAAUL,GAAV,CAAc,UAAd,CAAP;AACD;;;;;;;uBA7BU4B,e,EAAe,uH,EAAA,0I;AAAA,K;;;YAAfA,e;AAAe,6B;AAAA,e;AAAA,a;AAAA,w5B;AAAA;AAAA;ACZ5B;;AACE;;AAAiC;;AAAS;;AAC1C;;AASE;;AACF;;AAEA;;AAwCE;;AACE;;AAGE;AAAA,mBAAY,IAAAI,KAAA,gBAAZ;AAA6B,WAA7B;;AAEA;;AAMA;;AAQA;;AACE;;AACF;;AACF;;AACA;;AAGA;;AAGA;;AAGF;;AACF;;AACF;;;;AAhCQ;;AAAA;;AAqBG;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDxEEJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjE,kBAAQ,EAAE,QADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,0C,CAOA;;;QAOayE,a;AAYX,6BACUC,WADV,EAEUpC,OAFV,EAGUqC,WAHV,EAGkC;AAAA;;AAFxB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAApC,OAAA,GAAAA,OAAA;AACA,aAAAqC,WAAA,GAAAA,WAAA,CAAwB,CAdlC;;AACA,aAAAC,SAAA,GAAY,EAAZ;AAOA,aAAAC,UAAA,GAAa,EAAb;AAQE,aAAKxD,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAAEC,eAAK,EAAEtC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAT,SAAhB,CAAd;AACA,aAAKuD,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBsC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADc,SAAd,CAAZ;AAIA,aAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BC,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADkB,SAAd,CAAlB;AAGD;;;;mCAEUhD,Q,EAAU;AAAA;;AACnB,eAAK0C,WAAL,CAAiBO,UAAjB,CAA4BjD,QAA5B,EAAsC,KAAKX,MAA3C,EAAmD9B,SAAnD,CACE,UAACC,IAAD,EAAU;AACR,gBAAI0F,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,kBAAIrC,IAAI,CAACqC,CAAD,CAAJ,IAAWsD,SAAf,EAA0B;AACxB;AACD;;AACDD,eAAC,CAACE,IAAF,CAAO5F,IAAI,CAACqC,CAAD,CAAX;AACD;;AACD,kBAAI,CAACwD,KAAL,GAAaH,CAAb;AACA,kBAAI,CAACI,QAAL,GAAgB9F,IAAhB;;AACA,iBAAK,IAAIqC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGqD,CAAC,CAACpD,MAAtB,EAA8BD,EAAC,EAA/B,EAAmC;AACjC,oBAAI,CAACyD,QAAL,CAAcC,KAAd;AACD;AACF,WAdH,EAeE,UAAC1F,KAAD;AAAA,mBAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAX;AAAA,WAfF;AAiBD;;;mCAMO;AACN,eAAK2F,QAAL;AACA,eAAKC,gBAAL;AACD;;;mCAEU;AAAA;;AACT,eAAKf,WAAL,CAAiBc,QAAjB,CAA0B,KAAKnE,MAA/B,EAAuC9B,SAAvC,CACE,UAACC,IAAD,EAAU;AACR,gBAAI0F,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,kBAAIrC,IAAI,CAACqC,CAAD,CAAJ,IAAWsD,SAAf,EAA0B;AACxB;AACD;;AACDD,eAAC,CAACE,IAAF,CAAO5F,IAAI,CAACqC,CAAD,CAAX;AACD;;AACD,kBAAI,CAACwD,KAAL,GAAaH,CAAb;AACA,kBAAI,CAACI,QAAL,GAAgB9F,IAAhB;;AACA,iBAAK,IAAIqC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGqD,CAAC,CAACpD,MAAtB,EAA8BD,GAAC,EAA/B,EAAmC;AACjC,oBAAI,CAACyD,QAAL,CAAcC,KAAd;AACD;;AAED9F,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,MAAI,CAAC2F,KAA1B;AACA5F,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,MAAI,CAAC4F,QAA9B;AACD,WAjBH,EAkBE,UAACzF,KAAD,EAAW;AACT6F,iBAAK,CAAC7F,KAAD,CAAL;AACD,WApBH;AAsBD;;;qCAEY;AAAA;;AACX,eAAK6E,WAAL,CAAiBc,QAAjB,CAA0B,KAAKnE,MAA/B,EAAuC9B,SAAvC,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAAC6F,KAAL,GAAa,GAAGM,MAAH,CAAU,OAAI,CAACN,KAAf,EAAsB7F,IAAtB,CAAb;AACD,WAJH,EAKE,UAACK,KAAD;AAAA,mBAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAX;AAAA,WALF;AAOD;;;gCAEOL,I,EAAM;AAAA;;AACZC,iBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAKoG,eAAL,CAAqBpG,IAArB;AACAC,iBAAO,CAACC,GAAR,CAAY,KAAKmG,IAAjB;AACA,cAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB;;AACA,cAAI,KAAKF,IAAL,IAAaV,SAAjB,EAA4B;AAC1BW,sBAAU,CAACE,MAAX,CAAkB,QAAlB,EAA4B,KAAKH,IAAjC,EAAuC,KAAKA,IAAL,CAAUI,IAAjD;AACD;;AACDH,oBAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8BxG,IAAI,CAAC,UAAD,CAAlC,EARY,CASZ;;AACA,eAAKkF,WAAL,CAAiBwB,UAAjB,CAA4BJ,UAA5B,EAAwC,KAAKzE,MAA7C,EAAqD9B,SAArD,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAAC8F,QAAL,GAAgB,EAAhB;AACA,mBAAI,CAACD,KAAL,GAAa,EAAb;;AACA,mBAAI,CAACG,QAAL,GAJQ,CAKR;;AACD,WAPH,EAQE,UAAC3F,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAVH;AAYD;;;qCAEYsG,K,EAAO;AAClB,eAAKN,IAAL,GAAYM,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;;AACA,cAAI,KAAKR,IAAL,IAAaV,SAAjB,EAA4B;AAC1B,iBAAKP,SAAL,GAAiB,KAAKiB,IAAL,CAAUI,IAA3B;AACA,iBAAKK,cAAL,GAAsB,IAAtB;AACD;AACF;;;2CAEkB;AAAA;;AACjB,eAAKhE,OAAL,CAAamD,gBAAb,GAAgClG,SAAhC,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACqF,UAAL,GAAkBrF,IAAI,CAAC,oBAAD,CAAtB;AACD,WAHH,EAIE,UAACK,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WANH;AAQD;;;wCAEeL,I,EAAM;AACpB,eAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgD,UAAL,CAAgB/C,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,gBAAI,KAAKgD,UAAL,CAAgBhD,CAAhB,EAAmB,eAAnB,KAAuCrC,IAAI,CAAC,UAAD,CAA/C,EAA6D;AAC3D,kBAAI8B,KAAK,GAAG,uCAAU,CAACtC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAtB;AACA,mBAAK0F,WAAL,CAAiB4B,eAAjB,CAAiC,KAAKlF,MAAtC,EAA8C9B,SAA9C,CACE,UAACC,IAAD,EAAU,CAAE,CADd,EAEE,UAACK,KAAD,EAAW;AACTJ,uBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,eAJH;AAMD;AACF;AACF;;;mCAEU;AACT,cAAI,KAAKyF,QAAL,CAAcxD,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,iBAAKuD,KAAL,CAAWD,IAAX,CAAgB,KAAKE,QAAL,CAAcC,KAAd,EAAhB;AACD;AACF;;;4BAzGc;AACb,iBAAO,KAAK/C,IAAL,CAAUL,GAAV,CAAc,UAAd,CAAP;AACD;;;;;;;uBAjDUsC,a,EAAa,uI,EAAA,iK,EAAA,uI;AAAA,K;;;YAAbA,a;AAAa,2B;AAAA,e;AAAA,a;AAAA,04B;AAAA;AAAA;;;ACd1B;;AAEE;;AAGE;AAAA,mBAAY,IAAAQ,UAAA,sBAAZ;AAAwC,WAAxC;;AAEA;;AACE;;AAMA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AAGA;;AACE;;AACE;;AAEE;AAAA,mBAAY,IAAAuB,OAAA,gBAAZ;AAA+B,WAA/B;;AAGA;;AACE;;AACE;;AAAsB;;AAAG;;AAAS;;AAAI;;AACtC;;AAMF;;AACA;;AACE;;AAKE;AAAA,mBAAU,IAAAC,YAAA,QAAV;AAA8B,WAA9B;;AALF;;AAOA;;AAGE;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAA0B,WAA1B;;AAEA;;AACF;;AACF;;AAEA;;AACE;;AAA8C;;AAAI;;AACpD;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAKE;AAAA,mBAAY,IAAAC,QAAA,EAAZ;AAAsB,WAAtB;;AAEA;;AACF;;AACF;;AACF;;AACF;;;;AAzEI;;AAAA;;AAsBI;;AAAA;;AA2BiC;;AAAA;;AAgBjC;;AAAA,gGAA4B,wBAA5B,EAA4B,EAA5B;;AAIO;;AAAA;;;;;;;;;sED3DFjC,a,EAAa;cALzB,uDAKyB;eALf;AACT3E,kBAAQ,EAAE,MADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa2G,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAe;;;;;;;;sEDOLA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7G,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBM;;AAEE;;AACF;;;;;;AADO;;AAAA;;;;;;;;AA8BH;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;;;AACA;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AAGJ;;AACE;;AACF;;;;;;AAMF;;AACE;;AACE;;AACE;;AACA;;AAAG;;AAAkC;;AACrC;;AACE;;AAAwB;;AAAyB;;AACnD;;AACF;;AACF;;AACF;;;;;;AAPW;;AAAA;;AACF;;AAAA;;AAEuB;;AAAA;;;;;;;;AAjFpC;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AAAwB;;;;AAAqC;;AAC/D;;AACF;;AACA;;AACE;;AAIF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AAAK;;AAAiE;;AACtE;;AACE;;AACE;;AAOA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AAEA;;AAQA;;AAQF;;AACF;;AACA;;AAGF;;AAIA;;AACA;;AAYF;;AACF;;;;;;AApF4C;;AAAA;;AAKhC;;AAAA;;AAIoB;;AAAA;;AAIrB;;AAAA;;AAQD;;AAAA;;AAKD;;AAAA;;AAoBG;;AAAA;;AAQA;;AAAA;;AASD;;AAAA;;AAQF;;AAAA;;;;QDhEI4G,c;AAKX,8BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AADpB,aAAAC,YAAA,GAAe,KAAf;AAEE,aAAKxF,KAAL,GAAatC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B8H,QAA9B,EAAb;AACA,aAAK1F,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAAEC,eAAK,EAAE,KAAKA;AAAd,SAAhB,CAAd;AACD;;;;mCAEO,CACN;AACD;;;iCAEQ0F,M,EAAQ,CAAE;;;oCAEPA,M,EAAQ,CAAE;;;qCAETA,M,EAAQ;AAAA;;AACnBvH,iBAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,cAAMF,IAAI,GAAG;AAAEwH,kBAAM,EAAEA;AAAV,WAAb;AACA,eAAKH,WAAL,CAAiBI,YAAjB,CAA8BzH,IAA9B,EAAoC,KAAK6B,MAAzC,EAAiD9B,SAAjD,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AADQ,uDAES,OAAI,CAAC0H,QAFd;AAAA;;AAAA;AAER,kEAAgC;AAAA,oBAAvBC,IAAuB;;AAC9B,oBAAIA,IAAI,CAAC3F,GAAL,IAAYwF,MAAhB,EAAwB;AACtBG,sBAAI,CAACC,KAAL,GAAa5H,IAAI,CAAC,OAAD,CAAjB;AACA2H,sBAAI,CAACE,KAAL,GAAa,KAAb;AACD;AACF;AAPO;AAAA;AAAA;AAAA;AAAA;AAQT,WATH,EAUE,UAACxH,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAZH;AAcD;;;mCAEUmH,M,EAAQ;AAAA;;AACjBvH,iBAAO,CAACC,GAAR,CAAYsH,MAAZ,EAAoB,OAApB;AACA,cAAMxH,IAAI,GAAG;AAAEwH,kBAAM,EAAEA;AAAV,WAAb;AACA,eAAKH,WAAL,CAAiBS,UAAjB,CAA4B9H,IAA5B,EAAkC,KAAK6B,MAAvC,EAA+C9B,SAA/C,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AADQ,wDAES,OAAI,CAAC0H,QAFd;AAAA;;AAAA;AAER,qEAAgC;AAAA,oBAAvBC,IAAuB;;AAC9B,oBAAIA,IAAI,CAAC3F,GAAL,IAAYwF,MAAhB,EAAwB;AACtBG,sBAAI,CAACC,KAAL,GAAa5H,IAAI,CAAC,OAAD,CAAjB;AACA2H,sBAAI,CAACE,KAAL,GAAa,IAAb;AACD;AACF;AAPO;AAAA;AAAA;AAAA;AAAA;AAQT,WATH,EAUE,UAACxH,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAZH;AAcD;;;sCAEa0H,W,EAAaP,M,EAAQ;AAAA;;AACjC,cAAIO,WAAW,IAAI,EAAnB,EAAuB;AAAA,wDACJ,KAAKL,QADD;AAAA;;AAAA;AACrB,qEAAgC;AAAA,oBAAvBC,IAAuB;;AAC9B,oBAAIA,IAAI,CAAC3F,GAAL,IAAYwF,MAAhB,EAAwB;AACtBG,sBAAI,CAACL,YAAL,GAAoB,IAApB;AACA;AACD;AACF;AANoB;AAAA;AAAA;AAAA;AAAA;;AAOrB;AACD,WARD,MAQO;AAAA,wDACY,KAAKI,QADjB;AAAA;;AAAA;AACL,qEAAgC;AAAA,oBAAvBC,KAAuB;;AAC9B,oBAAIA,KAAI,CAAC3F,GAAL,IAAYwF,MAAhB,EAAwB;AACtBG,uBAAI,CAACL,YAAL,GAAoB,KAApB;AACA;AACD;AACF;AANI;AAAA;AAAA;AAAA;AAAA;AAON;;AAED,cAAMtH,IAAI,GAAG;AAAEgI,mBAAO,EAAED,WAAX;AAAwBP,kBAAM,EAAEA;AAAhC,WAAb;AACA,eAAKH,WAAL,CAAiBY,WAAjB,CAA6BjI,IAA7B,EAAmC,KAAK6B,MAAxC,EAAgD9B,SAAhD,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACwH,QAAjB;AACAzH,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,mBAAI,CAAC0H,QAAL,CAAcQ,GAAd,CAAkB,UAACP,IAAD,EAAU;AAC1B1H,qBAAO,CAACC,GAAR,CAAYyH,IAAI,CAAC3F,GAAjB;AACA/B,qBAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,SAAD,CAAJ,CAAgB,KAAhB,CAAZ;;AACA,kBAAI2H,IAAI,CAAC3F,GAAL,IAAYhC,IAAI,CAAC,SAAD,CAAJ,CAAgB,KAAhB,CAAhB,EAAwC;AACtC2H,oBAAI,CAACQ,QAAL,GAAgBnI,IAAI,CAAC,SAAD,CAAJ,CAAgB,UAAhB,CAAhB;AACD,eAFD,MAEO;AACL,uBAAO2H,IAAP;AACD;AACF,aARD;;AAUA1H,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACwH,QAAjB;AACD,WAhBH,EAiBE,UAACrH,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAnBH;AAqBD;;;mCAEU;AACTJ,iBAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;;+BAEM;AACLD,iBAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;;;;;;uBAxGUkH,c,EAAc,uI;AAAA,K;;;YAAdA,c;AAAc,4B;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,66B;AAAA;AAAA;ACX3B;;;;AAAK;;;;;;;;;;sEDWQA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT9G,kBAAQ,EAAE,OADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;gBACxB;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkFQ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFJ;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;QDvEA4H,iB;AAKX,iCAAoBtF,OAApB,EAAmDC,MAAnD,EAAmE;AAAA;;AAA/C,aAAAD,OAAA,GAAAA,OAAA;AAA+B,aAAAC,MAAA,GAAAA,MAAA;AACjD,aAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBjB,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADc;AAExB0C,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFc;AAGxB4D,eAAK,EAAE,IAAI,0DAAJ,EAHiB;AAIxB9I,kBAAQ,EAAE,IAAI,0DAAJ,EAJc;AAKxBG,iBAAO,EAAE,IAAI,0DAAJ,EALe;AAMxBkE,iBAAO,EAAE,IAAI,0DAAJ;AANe,SAAd,CAAZ;AAQD;;;;mCAEO,CAAW;;;iCAEVpB,Q,EAAU;AAAA;;AACjBvC,iBAAO,CAACC,GAAR,CAAY,6BAA6BC,IAAI,CAACC,SAAL,CAAeoC,QAAf,CAAzC;AACA,eAAKM,OAAL,CAAaO,QAAb,CAAsBb,QAAtB,EAAgCzC,SAAhC,CACE,UAACC,IAAD,EAAU;AACR,gBAAM4E,SAAS,GAAG,uCAAU,CAAC5E,IAAI,CAAC,OAAD,CAAL,CAA5B;AACAR,wBAAY,CAACuF,OAAb,CAAqB,OAArB,EAA8B/E,IAAI,CAAC,OAAD,CAAlC;AACAR,wBAAY,CAACuF,OAAb,CAAqB,SAArB,EAAgCH,SAAS,CAAChB,OAA1C;;AAEA,mBAAI,CAACb,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,WAPH,EAQE,UAACjD,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,mBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,mBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WAZH;AAcD;;;4BAEc;AACb,iBAAO,KAAKR,IAAL,CAAUL,GAAV,CAAc,UAAd,CAAP;AACD;;;4BACc;AACb,iBAAO,KAAKK,IAAL,CAAUL,GAAV,CAAc,UAAd,CAAP;AACD;;;4BAEW;AACV,iBAAO,KAAKK,IAAL,CAAUL,GAAV,CAAc,OAAd,CAAP;AACD;;;;;;;uBA7CUyF,iB,EAAiB,0I,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,+B;AAAA,e;AAAA,a;AAAA,qrC;AAAA;AAAA;ACX9B;;AACE;;AACG;;AAAI;;AAAa;;AAAM;;AAAS;;AAAK;;AAExC;;AACE;;AAAyB;AAAA,mBAAY,IAAA/E,QAAA,gBAAZ;AAAgC,WAAhC;;AACvB;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAOF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAOF;;AACA;;AACE;;AAAmB;;AAAK;;AACxB;;AAOF;;AACA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAOF;;AAEA;;AACE;;AAAO;;AAAQ;;AACf;;AAME;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC3B;;AAAwB;;AAAO;;AAC/B;;AAAuB;;AAAM;;AAC7B;;AAAqB;;AAAI;;AACzB;;AAA2B;;AAAU;;AACrC;;AAAyB;;AAAQ;;AACjC;;AAAuB;;AAAM;;AAC7B;;AAAwB;;AAAO;;AAC/B;;AAAsB;;AAAK;;AAC3B;;AAAuB;;AAAM;;AAC7B;;AACG;;AAAwB;;AAE7B;;AACF;;AACA;;AACE;;AAMA;;AAAsB;;AAAK;;AAAQ;;AACrC;;AACA;;AAA8C;;AAAQ;;AACtD;;AAKF;;AACF;;AACF;;;;AAnFU;;AAAA;;AA4EC;;AAAA;;;;;;;;;sEDtEE+E,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9H,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa8H,wB;AAOX,wCAAoBxF,OAApB,EAAkDC,MAAlD,EAA0EY,KAA1E,EAAiG;AAAA;;AAA7E,aAAAb,OAAA,GAAAA,OAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAY,KAAA,GAAAA,KAAA;AAD1E,aAAA0B,UAAA,GAAa,EAAb;AAEE,aAAKrC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBuF,qBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADW,SAAd,CAAZ;AAGD;;;;wCAEe/F,Q,EAAU;AAAA;;AACxB,eAAKX,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAAEC,iBAAK,EAAEtC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAT,WAAhB,CAAd;AACA,eAAKqD,OAAL,CAAa0F,uBAAb,CAAqC,KAAK3G,MAA1C,EAAkD9B,SAAlD,CACE,UAACC,IAAD,EAAU;AACRR,wBAAY,CAACiJ,UAAb,CAAwB,OAAxB;AACAjJ,wBAAY,CAACiJ,UAAb,CAAwB,SAAxB;AACAjJ,wBAAY,CAACiJ,UAAb,CAAwB,iBAAxB;;AACA,mBAAI,CAAC1F,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WANH,EAOE,UAACjD,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,mBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,mBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WAXH;AAaD;;;mCAEO,CAAW;;;;;;;uBA9BR8E,wB,EAAwB,uI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAxBA,wB;AAAwB,uC;AAAA,e;AAAA,a;AAAA,8W;AAAA;AAAA;ACXrC;;AACE;;AACE;;AAAI;;AAAwB;;AAC5B;;AAEM;AAAA,mBAAY,IAAAI,eAAA,gBAAZ;AAAuC,WAAvC;;AAGA;;AACE;;AACE;;AAAO;;AAAyB;;AAChC;;AAOF;;AACA;;AACE;;AAA8C;;AAAI;;AACpD;;AACF;;AACF;;AACN;;AACF;;;;AArBU;;AAAA;;;;;;;;;sEDOGJ,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACThI,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamI,mB;AACX,qCAAc;AAAA;AAAE;;;;mCAER,CAAW;;;;;;;uBAHRA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,kC;AAAA,e;AAAA,a;AAAA,6G;AAAA;AAAA;ACPhC;;AACE;;AACE;;AAAI;;AAA2B;;AAC/B;;AACE;;AACE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;sEDbaA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrI,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaoI,oB;AAGX,oCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,gBAAA,GAAmB,yCAAnB;AAEgC;;;;iCAE/B9I,I,EAAM;AACb,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAKmB,gBADN,EACwB9I,IADxB,EAEJ+I,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;yCAEgBtJ,O,EAASuJ,K,EAAO;AAC/B,iBAAO,KAAKJ,IAAL,CACJlG,GADI,CACA,KAAKmG,gBAAL,GAAsB,GAAtB,GAA2BpJ,OAA3B,GAAmC,GAAnC,GAAuCuJ,KADvC,EAEJF,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;;;;;uBA1BUuI,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVM,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACRjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;AAKX,4BAAoBN,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJZ,aAAAO,QAAA,GAAW,sCAAX;AACA,aAAAC,WAAA,GAAc,gCAAd;AACA,aAAAC,eAAA,GAAkB,iDAAlB;AAEgC;;;;8BAElCtJ,I,EAAM;AACV,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAKyB,QADN,EACgBpJ,IADhB,EAEJ+I,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;iCAEQhJ,I,EAAM;AACb,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAK0B,WADN,EACmBrJ,IADnB,EAEJ+I,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;qCAEYwB,M,EAAQ;AACnB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAK2B,eADN,EACuB,MADvB,EAC+B;AAAEC,mBAAO,EAAE1H;AAAX,WAD/B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;;;;;uBAlCUG,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVD,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAaaM,W;AAIX,2BAAoBX,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAY,OAAA,GAAU,gCAAV;AACA,aAAAC,aAAA,GAAgB,uCAAhB;AAEgC;;;;mCAE7B1J,I,EAAM6B,M,EAAQ;AACvB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAK8B,OADN,EACezJ,IADf,EACqB;AAAEuJ,mBAAO,EAAE1H;AAAX,WADrB,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iCAESnH,M,EAAQ;AACf,cAAME,QAAQ,GAAG,uCAAU,CAACvC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CsC,QAA3D;AACA,iBAAO,KAAK8G,IAAL,CACJlG,GADI,CACA,KAAK8G,OAAL,GAAe,GAAf,GAAqB1H,QADrB,EAC+B;AAAEwH,mBAAO,EAAE1H;AAAX,WAD/B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;mCAEUhJ,I,EAAM6B,M,EAAQ;AACvB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAK+B,aADN,EACqB1J,IADrB,EAC2B;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD3B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;;;;;uBA9CUmJ,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVN,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaS,W;AAKX,2BAAoBd,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJpB,aAAAe,gBAAA,GAAmB,wCAAnB;AACA,aAAAC,aAAA,GAAgB,qCAAhB;AACA,aAAAC,eAAA,GAAkB,uCAAlB;AAEwC;;;;oCAE5B9J,I,EAAM6B,M,EAAQ;AACxB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAKiC,gBADN,EACwB5J,IADxB,EAC8B;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD9B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;mCAEUhJ,I,EAAM6B,M,EAAQ;AACvB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAKkC,aADN,EACqB7J,IADrB,EAC2B;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD3B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;qCAEYhJ,I,EAAM6B,M,EAAQ;AACzB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAKmC,eADN,EACuB9J,IADvB,EAC6B;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD7B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;;;;;uBAlCUsJ,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVT,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaa,mB;AAIX,mCAAoBlB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAmB,gBAAA,GAAmB,qCAAnB;AACA,aAAAC,sBAAA,GAAyB,4CAAzB;AAEgC;;;;iCAE/BjK,I,EAAM;AACb,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAKqC,gBADN,EACwBhK,IADxB,EAEJ+I,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;2CAEkB;AACjB,iBAAO,KAAKH,IAAL,CACJlG,GADI,CACA,KAAKqH,gBADL,EAEJjB,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;4CAEmBhJ,I,EAAM;AACxB,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAKsC,sBADN,EAC8BjK,IAD9B,EAEJ+I,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;;;;;uBAjCU0J,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVb,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYagB,W;AAaX,2BAAoBrB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAZZ,aAAAsB,cAAA,GAAiB,gCAAjB;AACA,aAAAC,aAAA,GAAgB,uCAAhB;AACA,aAAAC,cAAA,GAAiB,yCAAjB;AACA,aAAAC,cAAA,GAAiB,yCAAjB;AACA,aAAAC,eAAA,GAAkB,yCAAlB;AACA,aAAAC,gBAAA,GAAmB,8CAAnB;AACA,aAAAC,eAAA,GAAkB,4CAAlB;AACA,aAAAC,iBAAA,GAAoB,2CAApB;AACA,aAAAC,0BAAA,GAA6B,kDAA7B;AAKN,aAAK7I,KAAL,GAAatC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B8H,QAA9B,EAAb;AACD;;;;oCAEW1F,M,EAAQ;AAClB,iBAAO,KAAKgH,IAAL,CAAUlG,GAAV,CAAc,KAAKwH,cAAnB,EAAmC;AACxCZ,mBAAO,EAAE1H;AAD+B,WAAnC,CAAP;AAGD;;;mCAEU7B,I,EAAM6B,M,EAAQ;AACvB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CAEH,KAAKyC,aAFF,EAGH;AAAErI,oBAAQ,EAAE/B,IAAI,CAAC,YAAD;AAAhB,WAHG,EAIH;AAAEuJ,mBAAO,EAAE1H;AAAX,WAJG,EAMJkH,IANI,CAMC,kEAAW,KAAKC,WAAhB,CAND,CAAP;AAOD;;;oCAEWhJ,I,EAAM6B,M,EAAQ;AACxB5B,iBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAO,KAAK6I,IAAL,CACJlB,IADI,CACC,KAAK0C,cADN,EACsB;AAAEO,oBAAQ,EAAE5K;AAAZ,WADtB,EAC0C;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD1C,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;oCAEmB3I,K,EAAO;AACzB,cAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD,WAHD,MAGO;AACL;AACAJ,mBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,KAAjC;AACD;;AACD,iBAAO,wDAAWA,KAAX,CAAP;AACD;;;yCAEgBwB,M,EAAQ;AACvB,iBAAO,KAAKgH,IAAL,CACJlG,GADI,CACA,KAAK2H,cADL,EACqB;AAAEf,mBAAO,EAAE1H;AAAX,WADrB,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;iCAEQ6B,U,EAAYhJ,M,EAAQ;AAC3B,cAAM7B,IAAI,GAAG;AAAE8K,oBAAQ,EAAED;AAAZ,WAAb;AACA,iBAAO,KAAKhC,IAAL,CACJlB,IADI,CACC,KAAK4C,eADN,EACuBvK,IADvB,EAC6B;AAAEuJ,mBAAO,EAAE1H;AAAX,WAD7B,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP,CAF2B,CAM3B;AACA;AACA;AACA;AACA;AACA;AACD;;;wCAEenH,M,EAAQ;AACtB,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAK6C,gBADN,EACwB,MADxB,EACgC;AAAEjB,mBAAO,EAAE1H;AAAX,WADhC,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;0CAEiB;AAChB,iBAAO,KAAKH,IAAL,CACJlG,GADI,CACA,KAAK8H,eADL,EAEJ1B,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;uCAEc3E,I,EAAM;AACnB,iBAAO,KAAKwE,IAAL,CACJlB,IADI,CACC,KAAK+C,iBADN,EACyB;AAAC,oBAAQrG;AAAT,WADzB,EAEJ0E,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;gDAEuBnH,M,EAAQ;AAC9B,iBAAO,KAAKgH,IAAL,CACJlB,IADI,CACC,KAAKgD,0BADN,EACkC,MADlC,EAC0C;AAACpB,mBAAO,EAAE1H;AAAV,WAD1C,EAEJkH,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD;;;;;;;uBA7FUkB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVhB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiCK;;AACG;;AAA0B;;AAAc;;AACxC;;AAAI;;AAAwB;;AAC5B;;AACC;;AAAS;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;AAAM;;AAClE;;AACH;;;;;;AAL6B;;AAAA;;AACtB;;AAAA;;;;QD1BC6B,c;AAMX,8BAAoBjI,OAApB,EAAkD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADpB,aAAAuC,UAAA,GAAa,EAAb;AAEE,aAAKrC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBgI,uBAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADS,SAAd,CAAZ;AAGD;;;;uCAEcxI,Q,EAAU;AAAA;;AACvB,eAAKM,OAAL,CAAaO,QAAb,CAAsBb,QAAtB,EAAgCzC,SAAhC,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACqF,UAAL,CAAgBO,IAAhB,CAAqB;AAAC5D,iBAAG,EAAEhC,IAAI,CAAC,qBAAD,CAAJ,CAA4B,KAA5B,CAAN;AAA0CgL,2BAAa,EAAEhL,IAAI,CAAC,qBAAD,CAAJ,CAA4B,eAA5B;AAAzD,aAArB;AACD,WAHH,EAIE,UAACK,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,mBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,mBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WARH;AAUD;;;mCAEO;AACN,eAAKyC,gBAAL;AACD;;;2CAEkB;AAAA;;AACjB,eAAKnD,OAAL,CAAamD,gBAAb,GAAgClG,SAAhC,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACqF,UAAL,GAAkBrF,IAAI,CAAC,oBAAD,CAAtB;AACD,WAHH,EAIE,UAACK,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WANH;AAQD;;;kCAESgE,I,EAAM;AAAA;;AACd,eAAKvB,OAAL,CAAamI,mBAAb,CAAiC5G,IAAjC,EAAuCtE,SAAvC,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACiG,gBAAL;AACD,WAHH,EAIE,UAAC5F,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAK,CAACA,KAAlB;AACA,mBAAI,CAACkD,gBAAL,GAAwBlD,KAAK,CAACA,KAA9B;AACA,mBAAI,CAACmD,SAAL,GAAiB,IAAjB;AACD,WARH;AAUD;;;;;;;uBAnDUuH,c,EAAc,iK;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,ic;AAAA;AAAA;ACT3B;;AACE;;AACE;;AAAI;;AAAe;;AACnB;;AAEM;AAAA,mBAAY,IAAAG,cAAA,gBAAZ;AAAsC,WAAtC;;AAGA;;AACE;;AACE;;AAAO;;AAAe;;AACtB;;AAMF;;AACA;;AACE;;AAA8C;;AAAI;;AACpD;;AACF;;AACF;;AACN;;AACF;;AACA;;AACE;;AACG;;AACG;;AAA0B;;AAAG;;AAC7B;;AAAI;;AAAI;;AACX;;AACH;;AACA;;AACG;;AAOH;;AACF;;;;AArCU;;AAAA;;AA6BD;;AAAA;;;;;;;;;sEDxBIH,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzK,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AACE;;AACF;;;;;;AADuB;;AAAA;;;;;;AAgBzB;;AAAgC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIhC;;AAAgC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAIhC;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAKF;;AAAgC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIhC;;AAAgC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAK9B;;AAAmC;;AAAO;;;;;;AAC1C;;AAAoC;;AAAQ;;;;;;AAF9C;;AACE;;AACA;;AACF;;;;;;AAFO;;AAAA;;AACA;;AAAA;;;;ADvCb,QAAI2K,cAAc,GAAG,sCAArB;;QAOaC,oB;AAcX,oCAAoB5J,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AANpB,aAAA6J,YAAA,GAAe,4BAAf;AACA,aAAAC,MAAA,GAAS,IAAI,wDAAJ,CAAc;AACrBjF,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADe;AAErBkF,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFS,SAAd,CAAT;AAME,aAAKzJ,KAAL,GAAatC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B8H,QAA9B,EAAb;AACA,aAAKxF,QAAL,GAAgB,uCAAU,CAACvC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0CsC,QAA1D;AACA,aAAKF,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAC5BC,eAAK,EAAE,KAAKA,KAAL,CAAWyF,QAAX;AADqB,SAAhB,CAAd;AAGD;;;;mCAEO;AAAA;;AACN,eAAKiE,cAAL;AACA,cAAIC,cAAc,GAChB,0CAA0C,KAAK1J,QADjD;AAGA,eAAK2J,QAAL,GAAgB,IAAI,4DAAJ,CAAiB;AAC/BC,eAAG,EAAEF,cAD0B;AAE/BG,qBAAS,EAAE;AAFoB,WAAjB,CAAhB;;AAIA,eAAKF,QAAL,CAAcG,iBAAd,GAAkC,UAACxF,IAAD,EAAU;AAC1CA,gBAAI,CAACyF,eAAL,GAAuB,KAAvB;AACD,WAFD;;AAGA,eAAKJ,QAAL,CAAcK,cAAd,GAA+B,UAC7B1H,IAD6B,EAE7B2H,QAF6B,EAG7BC,MAH6B,EAI7B1C,OAJ6B,EAK1B;AACHtJ,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCmE,IAAvC,EAA6C4H,MAA7C,EAAqDD,QAArD;AACA9F,iBAAK,CAAC,uBAAD,CAAL;;AACA,mBAAI,CAACsF,cAAL;AACD,WATD;AAUD;;;yCAEgB;AAAA;;AACf,eAAKhK,WAAL,CAAiB0K,WAAjB,CAA6B,KAAKrK,MAAlC,EAA0C9B,SAA1C,CACE,UAACC,IAAD,EAAU;AACR,mBAAI,CAACmM,WAAL,GAAmBnM,IAAnB;AACD,WAHH,EAIE,UAACK,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WANH;AAQD;;;;;;;uBAvDU+K,oB,EAAoB,uI;AAAA,K;;;YAApBA,oB;AAAoB,mC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,gO;AAAA;AAAA;ACdjC;;AACE;;AACE;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AAGA;;AACA;;AACA;;AAGE;AAAA,mBAAS,IAAAM,QAAA,YAAT;AAA6B,WAA7B;;AAGA;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AACF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AACF;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AAGF;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AACF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AACF;;AACA;;AACE;;AAAI;;AAAe;;AACnB;;AAIF;;AACF;;AACF;;;;AA7Ca;;AAAA;;AAIwC;;AAAA;;AAK3C;;AAAA;;AAQA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;sED9BGN,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9K,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;gBAG9B;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiBI;;AACE;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAI;;AAET;;;;;;;;AACA;;AACE;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAS;;AAEd;;;;;;;;AAGA;;AACE;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAiB;;AAEtB;;;;;;;;AACA;;AACE;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAmB;;AAExB;;;;;;;;AACA;;AACE;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAW;;AAEhB;;;;QD3DS4L,sB;AAKX,sCAAoBrJ,MAApB,EAA4CY,KAA5C,EAAmE;AAAA;;AAA/C,aAAAZ,MAAA,GAAAA,MAAA;AAAwB,aAAAY,KAAA,GAAAA,KAAA;AAH5C,aAAAC,OAAA,GAAUpE,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,MAAnC,GAA4C,IAA5C,GAAmD,KAA7D;AACA,aAAAsE,SAAA,GAAYvE,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAqC,MAArC,GAA8C,IAA9C,GAAqD,KAAjE;AAEqE;;;;mCAE7D;AACN,eAAKsC,QAAL,GAAgBvC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;AACA,eAAK4M,YAAL,GAAoB,uCAAU,CAAC7M,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAV,CAA0C,UAA1C,CAApB;AACD;;;4CAEmB;AAClB,iBAAO,KAAKsD,MAAL,CAAYO,QAAZ,CAAqB,CAAC,gBAAD,CAArB,CAAP;AACD;;;uCAEc;AACb,iBAAO,KAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,WAAD,CAArB,CAAP;AACD;;;8CAEqB;AACpB,iBAAO,KAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,kBAAD,CAArB,CAAP;AACD;;;mDAE0B;AACzB,iBAAO,KAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,iBAAD,CAArB,CAAP;AACD;;;oDAE2B;AAC1B,iBAAO,KAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,gBAAD,CAArB,CAAP;AACD;;;6CAEoB;AACnB,iBAAO,KAAKP,MAAL,CAAYO,QAAZ,CAAqB,CAAC,kBAAD,CAArB,CAAP;AACD;;;iCAEQ;AACP9D,sBAAY,CAACiJ,UAAb,CAAwB,OAAxB;AACAjJ,sBAAY,CAACiJ,UAAb,CAAwB,SAAxB;AACA,eAAK1F,MAAL,CAAYO,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;yCAEa;AACZ,iBAAO,KAAKM,OAAL,IAAgB,CAAC,KAAKA,OAAN,IAAiB,CAAC,KAAKG,SAA9C;AACD;;;;;;;uBA5CUqI,sB,EAAsB,uH,EAAA,+H;AAAA,K;;;YAAtBA,sB;AAAsB,qC;AAAA,e;AAAA,a;AAAA,o1B;AAAA;AAAA;ACTnC;;AACE;;AAKE;;AACE;;AAKE;AAAA,mBAAS,IAAAE,mBAAA,EAAT;AAA8B,WAA9B;;AACC;;AAA0B;;AAE/B;;AAEA;;AAUA;;AAYA;;AAUA;;AAUA;;AAUA;;AACE;;AAAoB;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAClB;;AACF;;AACF;;AACF;;AACF;;;;AA9DS;;AAAA;;AAIgB;;AAAA;;AAUA;;AAAA;;AAYA;;AAAA;;AAUA;;AAAA;;AAUA;;AAAA;;;;;;;;;sEDlDZH,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT9L,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACqBY;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;;;;;;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;;;;;AAtCZ;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AACE;;AACG;;AAAG;;AAAuB;;AAAI;;AAEnC;;AACF;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAsB;;AAC5B;;AACA;;AACE;;AASA;;AASF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAvC+B;;AAAA;;AAOX;;AAAA;;AAMJ;;AAAA;;AAGC;;AAAA;;AASA;;AAAA;;;;QDpBJgM,kB;AAIX,kCAAoBhL,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAClB,aAAKK,MAAL,GAAc,IAAI,gEAAJ,CAAgB;AAAEC,eAAK,EAAEtC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAT,SAAhB,CAAd;AACD;;;;mCAEO,CAAW;;;+BAEZmL,Q,EAAU;AAAA;;AACf3K,iBAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,eAAKsB,WAAL,CAAiBiL,WAAjB,CAA6B7B,QAA7B,EAAuC,KAAK/I,MAA5C,EAAoD9B,SAApD,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,iBAAK,IAAI0M,KAAT,IAAkB,OAAI,CAACC,KAAvB,EAA8B;AAC5B,kBAAI,OAAI,CAACA,KAAL,CAAWD,KAAX,EAAkB1K,GAAlB,IAAyB4I,QAA7B,EAAuC;AACrC,uBAAI,CAAC+B,KAAL,CAAWD,KAAX,EAAkBnK,OAAlB,GAA4B,IAA5B;AACA;AACD;AACF;AACF,WAVH,EAWE,UAAClC,KAAD;AAAA,mBAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAX;AAAA,WAXF;AAaD;;;iCAEQuK,Q,EAAU;AAAA;;AACjB3K,iBAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,iBAAO,CAACC,GAAR,CAAY0K,QAAZ;AAEA,eAAKpJ,WAAL,CAAiBsJ,QAAjB,CAA0BF,QAA1B,EAAoC,KAAK/I,MAAzC,EAAiD9B,SAAjD,CACE,UAACC,IAAD,EAAU;AACRC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACyM,KAAjB;;AACA,iBAAK,IAAID,KAAT,IAAkB,OAAI,CAACC,KAAvB,EAA8B;AAC5B,kBAAI,OAAI,CAACA,KAAL,CAAWD,KAAX,EAAkB1K,GAAlB,IAAyB4I,QAA7B,EAAuC;AACrC,uBAAI,CAAC+B,KAAL,CAAWD,KAAX,EAAkBnK,OAAlB,GAA4B,KAA5B;AACA;AACD;AACF;AACF,WAVH,EAWE,UAAClC,KAAD,EAAW;AACTJ,mBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,WAbH;AAeD;;;;;;;uBA9CUmM,kB,EAAkB,uI;AAAA,K;;;YAAlBA,kB;AAAkB,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,kS;AAAA;AAAA;ACV/B;;;;AAAK;;;;;;;;;sEDUQA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTlM,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;gBAC5B;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoM,gB;AACX,kCAAc;AAAA;AAAE;;;;mCAER,CAAW;;;;;;;uBAHRA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,8B;AAAA,c;AAAA,a;AAAA,oE;AAAA;AAAA;ACP7B;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;;;;sEDHaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTtM,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMqM,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI/M,OAAO,CAACI,KAAR,CAAc2M,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AdvertisementService } from '../service/advertisement/advertisement.service';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'advertise',\n  templateUrl: './advertise.component.html',\n  styleUrls: ['./advertise.component.css']\n})\nexport class AdvertiseComponent implements OnInit {\n  constructor(private advService: AdvertisementService) {}\n\n  advertisementList=[];\n\n  ngOnInit(): void {\n    this.getAdvertisement();\n  }\n\n  getAdvertisement() {\n    let birthday = jwt_decode(localStorage.getItem('token')).birthday;\n    let country = jwt_decode(localStorage.getItem('token')).country;\n    let bithDayDate = new Date(birthday);\n\n    var ageDifYear = new Date().getFullYear() - bithDayDate.getFullYear();\n\n    this.advService.getAdvertisement(country, ageDifYear).subscribe(\n      (data) => {\n        this.advertisementList = data[\"advertisement\"];\n        console.log(\"the advertisement are \"+ JSON.stringify(this.advertisementList));\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"border border-primary\" *ngFor=\"let item of advertisementList\">\n  <br>\n  <div>\n    <a [href]=\"item.linkUrl\" target=\"_blank\"><img class=\"add\" [src]=\"item.imgUrl\"/></a>\n  </div>\n  <div >\n    <a [href]=\"item.linkUrl\" target=\"_blank\">{{item.description}}</a>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'mwa-front-end';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { SampleWishComponent } from './sample-wish/sample-wish.component';\nimport { NewsComponent } from './news/news.component';\nimport { HomeAdminComponent } from './home-admin/home-admin.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { UserOperationComponent } from './user-operation/user-operation.component';\nimport { AdvertiseComponent } from './advertise/advertise.component';\n\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FollowingComponent } from './following/following.component';\n\nimport { TableComponent } from './table/table.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { UserblockComponent } from './userblock/userblock.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\nimport { RequestActivateComponent } from './request-activate/request-activate.component';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nconst appRoutes: Routes = [\n  { path: '', component: WelcomeComponent },\n  {\n    path: 'home',\n    component: HomeComponent,\n    children: [\n      { path: 'userdetails', component: UserDetailsComponent },\n      { path: 'following', component: FollowingComponent },\n      { path: 'news', component: NewsComponent },\n      { path: 'home-admin', component: HomeAdminComponent },\n      { path: 'app-table', component: TableComponent },\n      { path: 'manage-user', component: ManageUserComponent },\n      { path: 'request-activate', component: RequestActivateComponent },\n    ],\n  },\n\n  // { path: 'following', component: FollowingComponent },\n  { path: 'user', component: UserDetailsComponent },\n  //{ path: '**', component: NotfoundComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    WelcomeComponent,\n    HomeComponent,\n    NotfoundComponent,\n    SampleWishComponent,\n    NewsComponent,\n    HomeAdminComponent,\n    PostsComponent,\n    UserOperationComponent,\n    AdvertiseComponent,\n\n    UserDetailsComponent,\n    FollowingComponent,\n    TableComponent,\n    UserblockComponent,\n    ManageUserComponent,\n    RequestActivateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FileUploadModule,\n    InfiniteScrollModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../service/user/user.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'following',\n  templateUrl: './following.component.html',\n  styleUrls: ['./following.component.css'],\n})\nexport class FollowingComponent implements OnInit {\n  searchForm: FormGroup;\n  private header: HttpHeaders;\n  searchResult: any[];\n  noresult: boolean = false;\n  showResult: boolean = false;\n  username: string;\n  followed = false;\n  followText = 'Follow';\n  _id: String;\n  followers;\n\n  constructor(private userService: UserService) {\n    this.header = new HttpHeaders({ token: localStorage.getItem('token') });\n    this.username = jwt_decode(localStorage.getItem('token')).username;\n    this._id = jwt_decode(localStorage.getItem('token'))._id;\n    this.searchForm = new FormGroup({\n      searchname: new FormControl(),\n    });\n  }\n\n  getFollowingList() {\n    this.userService.getFollowingList(this.header).subscribe(\n      (data) => {\n        // console.log(data);\n        this.followers = data['followers'];\n        for (let i = 0; i < this.followers.length; i++) {\n          this.followers[i].flwdFlg = true;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  get searchname() {\n    return this.searchForm.get('searchname');\n  }\n\n  searchUserName(formData) {\n    this.userService.searchUser(formData, this.header).subscribe(\n      (data) => {\n        if (data['users'].length == 0) {\n          this.noresult = !this.noresult;\n          // this.noresult = true;\n        } else {\n          this.searchResult = data['users'];\n          this.noresult = false;\n          this.showResult = true;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  // follow(data) {\n  //   const sendData = { follower: data.innerHTML, username: this.username };\n  //   this.userService.addFollower(sendData, this.header).subscribe(\n  //     (data) => {\n  //       console.log(data);\n  //       if (data['msg'] === 'success') {\n  //         this.followed = true;\n  //         this.followText = 'Unfollow';\n  //       }\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     }\n  //   );\n  // }\n\n  ngOnInit(): void {\n    this.getFollowingList();\n  }\n}\n","<div class=\"container\">\n  <div class=\"border border-primary\">\n    <div class=\"new-post\">\n      <form\n        [formGroup]=\"searchForm\"\n        (ngSubmit)=\"searchUserName(searchForm.value)\"\n      >\n        <div class=\"form-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"searchname\"\n            name=\"searchname\"\n            type=\"text\"\n            placeholder=\"search person\"\n          />\n        </div>\n\n        <button class=\"btn btn-primary\" type=\"submit\">Search</button>\n        <div *ngIf=\"noresult\">\n          <div class=\"alert alert-warning\">No result</div>\n        </div>\n      </form>\n    </div>\n    <div>\n      <!-- Result section -->\n      <div *ngIf=\"showResult\">\n        <h3>Search Result:</h3>\n        <userblock [users]=\"searchResult\"></userblock>\n      </div>\n      <!--\n      <div *ngFor=\"let user of searchResult\">\n        <div class=\"border border-primary\">\n          <div class=\"row user-section\">\n            <div class=\"border border-dark\">\n              <div>\n                <img class=\"img-fit\" [src]=\"user.photo\" />\n              </div>\n              <div>\n                username: <span #username>{{ user.username }}</span>\n              </div>\n              <div>Country: {{ user.country }}</div>\n            </div>\n            <div>\n              <div>\n                <button\n                  [class.btn-secondary]=\"followed\"\n                  class=\"btn btn-primary\"\n                  (click)=\"follow(username)\"\n                >\n                  {{ followText }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>-->\n    </div>\n    <div>\n      <h3>Following list</h3>\n      <userblock [users]=\"followers\"></userblock>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AdvertisementService } from '../service/advertisement/advertisement.service';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'home-admin',\n  templateUrl: './home-admin.component.html',\n  styleUrls: ['./home-admin.component.css'],\n})\nexport class HomeAdminComponent implements OnInit {\n  form: FormGroup;\n  formError: Boolean;\n  formErrorMessage: String;\n\n  constructor(private service: AdvertisementService, private router: Router) {\n    this.form = new FormGroup({\n      imgUrl: new FormControl(''),\n      description: new FormControl(''),\n      minAge: new FormControl(''),\n      country: new FormControl(''),\n      linkUrl: new FormControl(''),\n    });\n  }\n//\n  ngOnInit(): void {}\n\n  newAdvertisement(formData) {\n    console.log(\"the data is \"+JSON.stringify(formData));\n    this.service.register(formData).subscribe(\n      (data) => {\n        this.router.navigate(['/home/home-admin']);\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n}","<div class=\"container border border-primary\">\n  <div >\n    <h3>Advertisement</h3>\n    <form\n      [formGroup]=\"form\"\n      (ngSubmit)=\"newAdvertisement(form.value)\"\n    >\n      <div>\n        <div style=\"max-width: 100%;\">\n          <label>Image Url:</label>\n          <input\n            formControlName=\"imgUrl\"\n            type=\"text\"\n            name=\"imgUrl\"\n            class=\"form-control\"\n            style=\"max-width: 100%;\"\n          />\n        </div>\n        <div>\n          <label>Description:</label>\n          <input\n            formControlName=\"description\"\n            type=\"text\"\n            name=\"description\"\n            class=\"form-control\"\n          />\n        </div>\n        <div style=\"max-width: 100%;\">\n          <label>Link Url:</label>\n          <input\n            formControlName=\"linkUrl\"\n            type=\"text\"\n            name=\"linkUrl\"\n            class=\"form-control\"\n            style=\"max-width: 100%;\"\n          />\n        </div>\n        <div class=\"row\">\n        <div class=\"column\">\n          <label>Minimum age:</label>\n          <input type=\"number\" min=\"1\" max=\"100\" value=\"1\" formControlName=\"minAge\" class=\"form-control\" name=\"minAge\"/>\n        </div>\n        \n        <div class=\"column\">\n          <label>Country:</label>\n          <select id=\"country\" name=\"country\" formControlName=\"country\" class=\"form-control\">\n            <option value=\"all\" selected>All</option>\n            <option value=\"Angola\">Angola</option>\n            <option value=\"China\">China</option>\n            <option value=\"Ecuador\">Ecuador</option>\n            <option value=\"France\">France</option>\n            <option value=\"Iran\">Iran</option>\n            <option value=\"Kazakhstan\">Kazakhstan</option>\n            <option value=\"Mongolia\">Mongolia</option>\n            <option value=\"Russia\">Russia</option>\n            <option value=\"Senegal\">Senegal</option>\n            <option value=\"Spain\">Spain</option>\n            <option value=\"Uganda\">Uganda</option>\n            <option value=\"United States of America\">United States of America</option>\n          </select>\n        </div>\n      </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-primary\">Send</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login/login.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  currPage: String;\n  isAdmin = localStorage.getItem(\"isAdmin\")=== 'true' ? true : false;\n  constructor(\n    private service: LoginService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    let token = localStorage.getItem('token');\n    let admin = localStorage.getItem('isAdmin');\n    let activateRequest = localStorage.getItem(\"activateRequest\");\n    let isEnabled = localStorage.getItem(\"isEnabled\");\n    console.log(\"isEnabled \"+isEnabled)\n    \n    if (token) {\n      if (admin === 'true') {\n        this.router.navigate(['/home/home-admin']);\n      } else if(isEnabled === 'true'){\n        this.router.navigate(['/home/news']);\n      } else if(activateRequest === 'false'){\n        this.router.navigate(['/home/request-activate']);\n      } \n        else {\n        \n      }\n      this.currPage = 'home';\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n\n  //\n  getClass() {\n    return this.isAdmin ? 'col-9': 'col-6';\n  }\n}\n","<div class=\"container bg-light\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <user-operation></user-operation>\n    </div>\n    <div [className]=\"getClass()\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"col-3\" *ngIf=\"!isAdmin\">\n      <advertise></advertise>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../service/user/user.service';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'manage-user',\n  templateUrl: './manage-user.component.html',\n  styleUrls: ['./manage-user.component.css'],\n})\nexport class ManageUserComponent implements OnInit {\n  form: FormGroup;\n  formError: Boolean;\n  formErrorMessage: String;\n  inactiveUsersList = [];\n  private header: HttpHeaders;\n\n  constructor(private service: UserService, private router: Router) {\n    this.form = new FormGroup({\n      imgUrl: new FormControl(''),\n      description: new FormControl(''),\n      minAge: new FormControl(''),\n      country: new FormControl(''),\n    });\n  }\n//\n  ngOnInit(): void {\n    this.getInactiveUsers();\n  }\n\n  getInactiveUsers() {\n    this.service.getInactiveUser().subscribe(\n      (data) => {\n        this.inactiveUsersList = data[\"usersInactive\"];\n        console.log(\"incative user aer \"+ JSON.stringify(data));\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  activateUserRow(item) {\n    //this.header = new HttpHeaders({ token: item});\n    this.service.activeUserPost(item[\"_id\"]).subscribe(\n      (data) => {\n        this.getInactiveUsers();\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n}","<div class=\"container border border-primary\">\n  <div class=\"row align-items-center\">\n    <h3>Inactive Users</h3>\n  </div>\n</div>\n<table class=\"blueTable\">\n  <thead>\n     <tr>\n        <th style=\"display:none;\">#ID</th>\n        <th>username</th>\n        <th>email</th>\n        <th>country</th>\n        <th>timesBadPost</th>\n     </tr>\n  </thead>\n  <tbody>\n     <tr *ngFor=\"let item of inactiveUsersList\">\n        <td style=\"display:none;\">{{ item._id }}</td>\n        <td>{{ item.username }}</td>\n        <td>{{ item.email }}</td>\n        <td>{{ item.country }}</td>\n        <td>{{ item.timesBadPost }}</td>\n        <td>\n         <button (click)=\"activateUserRow(item)\"  class=\"btn btn-primary\">Active</button>\n        </td>\n     </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login/login.service';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  form: FormGroup;\n  invalidLogin: boolean;\n  loginFailed: boolean;\n  notLoggedIn = true;\n  isEnabled: boolean;\n  punishedUser: boolean;\n  private header: HttpHeaders;\n\n  constructor(private router: Router, private service: LoginService) {\n    this.form = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl(''),\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') === null) {\n      this.router.navigate(['/']);\n    } else {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  get username() {\n    return this.form.get('username');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n  log(x) {\n    console.log(x);\n  }\n\n  login(formData) {\n    this.service.login(formData).subscribe(\n      (data) => {\n        const tokenData = jwt_decode(data['token']);\n        console.log(\"tokenData[isEnabled] \"+tokenData[\"isEnabled\"]);\n        if(tokenData[\"isEnabled\"]){\n          if(tokenData[\"timesBadPost\"] > 19){//validate if user has more than 20 unhealthy post\n              this.header = new HttpHeaders({token: data['token']});\n              this.service.disabledUser(this.header).subscribe(\n                (data) => {\n                 this.punishedUser = true;\n                },\n                  (error) => {\n                  console.log(error);\n                });\n              } else {\n              // success case\n              localStorage.setItem('token', data['token']);\n              localStorage.setItem('isAdmin', tokenData.isAdmin);\n              localStorage.setItem('isEnabled', tokenData[\"isEnabled\"]);\n              localStorage.setItem('activateRequest', tokenData[\"activateRequest\"]);\n              this.router.navigate(['/home']);\n            }\n        } if(!tokenData[\"activateRequest\"]){\n          localStorage.setItem('isAdmin', tokenData.isAdmin);\n          localStorage.setItem('token', data['token']);\n          localStorage.setItem('activateRequest', tokenData[\"activateRequest\"]);\n          localStorage.setItem('isEnabled', tokenData[\"isEnabled\"]);\n          this.router.navigate(['/home']);\n        }\n          else {\n          this.isEnabled = true;\n        }\n      },\n      (error) => {\n        // Error section\n        this.loginFailed = true;\n      }\n    );\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light border\">\n  <a class=\"navbar-brand\" href=\"#\">Wish List</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div\n    class=\"collapse navbar-collapse navbar-left pull-right\"\n    id=\"navbarSupportedContent\"\n  >\n    <!-- \n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\"\n          >Home <span class=\"sr-only\">(current)</span></a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"navbarDropdown\"\n          role=\"button\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          Dropdown\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n        </div>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\"\n          >Disabled</a\n        >\n      </li>\n    </ul> -->\n\n    <div class=\"navbar-nav\">\n      <form\n        class=\"form-inline my-2 my-lg-0\"\n        [formGroup]=\"form\"\n        (ngSubmit)=\"login(form.value)\"\n      >\n        <input\n          formControlName=\"username\"\n          type=\"text\"\n          class=\"form-control mr-sm-2\"\n          placeholder=\"Username\"\n        />\n        <input\n          formControlName=\"password\"\n          class=\"form-control mr-sm-2\"\n          type=\"password\"\n          placeholder=\"Password\"\n          aria-label=\"Search\"\n        />\n\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Login\n        </button>\n      </form>\n      <div *ngIf=\"loginFailed\" class=\"alert alert-danger\">\n        Username or password is incorrect\n      </div>\n      <div *ngIf=\"isEnabled\" class=\"alert alert-danger\">\n        account disabled\n      </div>\n      <div *ngIf=\"punishedUser\" class=\"alert alert-danger\">\n        You have more 20 unhealthy post. The account has been disabled\n      </div>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NewsService } from '../service/news/news.service';\nimport { UnhelthyWordService } from '../service/unhealthyword/unhealthyword.service';\nimport { UserService } from '../service/user/user.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\n// import { FileUploader } from 'ng2-file-upload';\n\n@Component({\n  selector: 'news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css'],\n})\nexport class NewsComponent implements OnInit {\n  // public uploader: FileUploader;\n  photoName = '';\n  photoUploadFlg: Boolean;\n  form: FormGroup;\n  searchform: FormGroup;\n  posts;\n  allPosts;\n  private header: HttpHeaders;\n  ItemsArray = [];\n  file;\n\n  constructor(\n    private newsService: NewsService,\n    private service: UnhelthyWordService,\n    private userservice: UserService\n  ) {\n    this.header = new HttpHeaders({ token: localStorage.getItem('token') });\n    this.form = new FormGroup({\n      postname: new FormControl(''),\n    });\n\n    this.searchform = new FormGroup({\n      searchpost: new FormControl(''),\n    });\n  }\n\n  searchPost(formData) {\n    this.newsService.searchPost(formData, this.header).subscribe(\n      (data) => {\n        let t = [];\n        for (let i = 0; i < 11; i++) {\n          if (data[i] == undefined) {\n            continue;\n          }\n          t.push(data[i]);\n        }\n        this.posts = t;\n        this.allPosts = data;\n        for (let i = 0; i < t.length; i++) {\n          this.allPosts.shift();\n        }\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  get postname() {\n    return this.form.get('postname');\n  }\n\n  ngOnInit(): void {\n    this.getPosts();\n    this.getUnhealthyWord();\n  }\n\n  getPosts() {\n    this.newsService.getPosts(this.header).subscribe(\n      (data) => {\n        let t = [];\n        for (let i = 0; i < 11; i++) {\n          if (data[i] == undefined) {\n            continue;\n          }\n          t.push(data[i]);\n        }\n        this.posts = t;\n        this.allPosts = data;\n        for (let i = 0; i < t.length; i++) {\n          this.allPosts.shift();\n        }\n\n        console.log('posts', this.posts);\n        console.log('All posts', this.allPosts);\n      },\n      (error) => {\n        alert(error);\n      }\n    );\n  }\n\n  getOnePost() {\n    this.newsService.getPosts(this.header).subscribe(\n      (data) => {\n        console.log(data);\n        this.posts = [].concat(this.posts, data);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  newPost(data) {\n    console.log(data);\n    this.isUnhealthyWord(data);\n    console.log(this.file);\n    const uploadData = new FormData();\n    if (this.file != undefined) {\n      uploadData.append('myFile', this.file, this.file.name);\n    }\n    uploadData.append('postname', data['postname']);\n    // this.newsService.submitPostWithPhoto(uploadData, this.header);\n    this.newsService.submitPost(uploadData, this.header).subscribe(\n      (data) => {\n        console.log(data);\n        this.allPosts = [];\n        this.posts = [];\n        this.getPosts();\n        // this.posts = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onFileChange(event) {\n    this.file = event.target.files[0];\n    if (this.file != undefined) {\n      this.photoName = this.file.name;\n      this.photoUploadFlg = true;\n    }\n  }\n\n  getUnhealthyWord() {\n    this.service.getUnhealthyWord().subscribe(\n      (data) => {\n        this.ItemsArray = data['unhealthyWordsList'];\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  isUnhealthyWord(data) {\n    for (let i = 0; i < this.ItemsArray.length; i++) {\n      if (this.ItemsArray[i]['unhealthyWord'] == data['postname']) {\n        let token = jwt_decode(localStorage.getItem('token'));\n        this.userservice.increaseBadPost(this.header).subscribe(\n          (data) => {},\n          (error) => {\n            console.log(error);\n          }\n        );\n      }\n    }\n  }\n\n  onScroll() {\n    if (this.allPosts.length > 0) {\n      this.posts.push(this.allPosts.shift());\n    }\n  }\n}\n","<div class=\"container border border-primary\">\n  <!-- <div class=\"input-group mb-3\"> -->\n  <form\n    class=\"form-group\"\n    [formGroup]=\"searchform\"\n    (ngSubmit)=\"searchPost(searchform.value)\"\n  >\n    <div class=\"input-group\">\n      <input\n        formControlName=\"searchpost\"\n        type=\"text\"\n        placeholder=\"Search post\"\n        class=\"form-control\"\n      />\n      <span class=\"input-group-btn\">\n        <button type=\"submit\" class=\"btn btn-primary\">\n          Search\n        </button>\n      </span>\n    </div>\n  </form>\n  <!-- </div> -->\n\n  <div class=\"row\">\n    <div class=\"row align-items-center new-post\">\n      <form\n        [formGroup]=\"form\"\n        (ngSubmit)=\"newPost(form.value)\"\n        class=\"form-inline\"\n      >\n        <div class=\"form-row align-items-center\">\n          <div class=\"form-group\">\n            <label for=\"postname\"><b>New Post:</b></label>\n            <input\n              formControlName=\"postname\"\n              type=\"text\"\n              name=\"postname\"\n              class=\"form-control\"\n            />\n          </div>\n          <div>\n            <input\n              style=\"display: none;\"\n              type=\"file\"\n              name=\"file\"\n              #fileInput\n              (change)=\"onFileChange($event)\"\n            />\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"fileInput.click()\"\n            >\n              <span class=\"fa fa-camera\" [textContent]=\"photoName\"></span>\n            </button>\n          </div>\n\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary\">Post</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div style=\"width: 100%;\">\n      <div\n        class=\"search-result\"\n        infiniteScroll\n        [infiniteScrollDistance]=\"2\"\n        [infiniteScrollThrottle]=\"50\"\n        (scrolled)=\"onScroll()\"\n      >\n        <posts [postsArr]=\"posts\"></posts>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>notfound works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\nimport { PostService } from '../service/post/post.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit {\n  @Input() postsArr;\n  header: HttpHeaders;\n  token: string;\n  commentError = false;\n  constructor(private postService: PostService) {\n    this.token = localStorage.getItem('token').toString();\n    this.header = new HttpHeaders({ token: this.token });\n  }\n\n  ngOnInit(): void {\n    // console.log(this.postsArr);\n  }\n\n  getLikes(postId) {}\n\n  getComments(postId) {}\n\n  submitUnlike(postId) {\n    console.log('unlike function');\n    const data = { postId: postId };\n    this.postService.submitUnlike(data, this.header).subscribe(\n      (data) => {\n        console.log(data);\n        for (let post of this.postsArr) {\n          if (post._id == postId) {\n            post.likes = data['likes'];\n            post.liked = false;\n          }\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  submitLike(postId) {\n    console.log(postId, 'liked');\n    const data = { postId: postId };\n    this.postService.submitLike(data, this.header).subscribe(\n      (data) => {\n        console.log(data);\n        for (let post of this.postsArr) {\n          if (post._id == postId) {\n            post.likes = data['likes'];\n            post.liked = true;\n          }\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  submitComment(commentData, postId) {\n    if (commentData == '') {\n      for (let post of this.postsArr) {\n        if (post._id == postId) {\n          post.commentError = true;\n          break;\n        }\n      }\n      return;\n    } else {\n      for (let post of this.postsArr) {\n        if (post._id == postId) {\n          post.commentError = false;\n          break;\n        }\n      }\n    }\n\n    const data = { comment: commentData, postId: postId };\n    this.postService.sendComment(data, this.header).subscribe(\n      (data) => {\n        console.log(this.postsArr);\n        console.log(data);\n\n        this.postsArr.map((post) => {\n          console.log(post._id);\n          console.log(data['newpost']['_id']);\n          if (post._id == data['newpost']['_id']) {\n            post.comments = data['newpost']['comments'];\n          } else {\n            return post;\n          }\n        });\n\n        console.log(this.postsArr);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onScroll() {\n    console.log('onscroll functino');\n  }\n\n  onUp() {\n    console.log('on up function');\n  }\n}\n","<div *ngFor=\"let post of postsArr\">\n  <div class=\"center\">\n    <div class=\"row\">\n      <div class=\"rounded-circle\">\n        <img class=\"img-fit rounded-circle\" [src]=\"post.user.photo\" />\n      </div>\n      <div>\n        <h5>\n          <span class=\"showusername\">\n            {{ post.user.username }}\n          </span>\n        </h5>\n\n        <span class=\"timeplace\">{{ post.insertDate | date: \"short\" }}</span>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngIf=\"post.photo\">\n        <!-- post image -->\n        <img [src]=\"post.photo\" class=\"img-fit-post\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"border border-info rounded post-body\">\n        <div class=\"post-body\">\n          {{ post.body }}\n        </div>\n      </div>\n    </div>\n\n    <div>Likes:{{ post.likes.length }} Comments:{{ post.comments.length }}</div>\n    <div class=\"container\">\n      <div class=\"input-group mb-3\">\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          name=\"comment\"\n          #comment\n          placeholder=\"comment\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            (click)=\"submitComment(comment.value, post._id)\"\n          >\n            Send\n          </button>\n\n          <button\n            *ngIf=\"!post.liked\"\n            type=\"button\"\n            class=\"btn btn-primary\"\n            (click)=\"submitLike(post._id)\"\n          >\n            Like\n          </button>\n          <button\n            *ngIf=\"post.liked\"\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            (click)=\"submitUnlike(post._id)\"\n          >\n            Unlike\n          </button>\n        </div>\n      </div>\n      <div *ngIf=\"post.commentError\" class=\"alert alert-danger\">\n        Comment is required\n      </div>\n    </div>\n\n    <!-- <div class=\"container\"> -->\n    <!-- Comments section -->\n    Comments:\n    <div *ngFor=\"let comment of post.comments\">\n      <div class=\"row\">\n        <div class=\"border border-success rounded\">\n          <img [src]=\"comment.commentedBy.photo\" class=\"img-fit-comment\" />\n          <b>{{ comment.commentedBy.username }}</b>\n          <div class=\"border border-primary comment-box\">\n            <p class=\"comment-body\">{{ comment.commentText }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- </div> -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { LoginService } from '../service/login/login.service';\nimport { Router } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n  formError: Boolean;\n  formErrorMessage: String;\n\n  constructor(private service: LoginService, private router: Router) {\n    this.form = new FormGroup({\n      username: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl(),\n      birthday: new FormControl(),\n      country: new FormControl(),\n      isAdmin: new FormControl(),\n    });\n  }\n\n  ngOnInit(): void {}\n\n  register(formData) {\n    console.log('the data to register is ' + JSON.stringify(formData));\n    this.service.register(formData).subscribe(\n      (data) => {\n        const tokenData = jwt_decode(data['token']);\n        localStorage.setItem('token', data['token']);\n        localStorage.setItem('isAdmin', tokenData.isAdmin);\n\n        this.router.navigate(['/home']);\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n\n  get username() {\n    return this.form.get('username');\n  }\n  get password() {\n    return this.form.get('password');\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n}\n","<div class=\"float-right\">\n  <span\n    ><h2>Register for <br />Wish List</h2></span\n  >\n  <div class=\"container\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"register(form.value)\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          formControlName=\"username\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          formControlName=\"password\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          formControlName=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"birthday\">Birthday:</label>\n        <input\n          type=\"date\"\n          id=\"birthday\"\n          name=\"birthday\"\n          formControlName=\"birthday\"\n          class=\"form-control\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Countie:</label>\n        <select\n          id=\"country\"\n          name=\"country\"\n          formControlName=\"country\"\n          class=\"form-control\"\n        >\n          <option value=\"Angola\">Angola</option>\n          <option value=\"China\">China</option>\n          <option value=\"Ecuador\">Ecuador</option>\n          <option value=\"France\">France</option>\n          <option value=\"Iran\">Iran</option>\n          <option value=\"Kazakhstan\">Kazakhstan</option>\n          <option value=\"Mongolia\">Mongolia</option>\n          <option value=\"Russia\">Russia</option>\n          <option value=\"Senegal\">Senegal</option>\n          <option value=\"Spain\">Spain</option>\n          <option value=\"Uganda\">Uganda</option>\n          <option value=\"United States of America\"\n            >United States of America</option\n          >\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <input\n          type=\"checkbox\"\n          name=\"isAdmin\"\n          value=\"isAdmin\"\n          formControlName=\"isAdmin\"\n        />\n        <label for=\"isAdmin\"> Admin</label><br />\n      </div>\n      <button class=\"btn btn-warning\" type=\"submit\">Register</button>\n      <div *ngIf=\"form.touched && formError\" class=\"alert alert-danger\">\n        <div *ngIf=\"formError\">\n          {{ formErrorMessage }}\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from '../service/user/user.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'request-activate',\n  templateUrl: './request-activate.component.html',\n  styleUrls: ['./request-activate.component.css']\n})\nexport class RequestActivateComponent implements OnInit {\n  form: FormGroup;\n  formError: Boolean;\n  formErrorMessage: String;\n  header: HttpHeaders;\n\n  ItemsArray = [];\n  constructor(private service: UserService, private router: Router, private route: ActivatedRoute) {\n    this.form = new FormGroup({\n      activateAcc: new FormControl(''),\n    });\n  }\n\n  requestActivate(formData) {\n    this.header = new HttpHeaders({ token: localStorage.getItem('token') });\n    this.service.sendRequestActivatePost(this.header).subscribe(\n      (data) => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('isAdmin');\n        localStorage.removeItem('activateRequest');\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container border border-primary\">\n  <div class=\"row align-items-center\">\n    <h3>Request Activate Account</h3>\n    <form\n          [formGroup]=\"form\"\n          (ngSubmit)=\"requestActivate(form.value)\"\n          class=\"form-inline\"\n        >\n          <div class=\"form-row align-items-center\">\n            <div class=\"form-group\">\n              <label>Request Activate Account:</label>\n              <input\n                formControlName=\"activateAcc\"\n                type=\"text\"\n                name=\"activateAcc\"\n                class=\"form-control\"\n                style=\"visibility: hidden;\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">Send</button>\n            </div>\n          </div>\n        </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sample-wish',\n  templateUrl: './sample-wish.component.html',\n  styleUrls: ['./sample-wish.component.css']\n})\nexport class SampleWishComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"border\">\n  <div>\n    <h1>Welcome to wish listing app</h1>\n    <h3>\n      <ul>\n        <li class=\"moto\">\n          Get information about your friends wish\n          <span class=\"fa fa-send\"></span>\n        </li>\n        <li class=\"moto\">\n          Share what is in your mind with world\n          <span class=\"fa fa-globe\"></span>\n        </li>\n        <li class=\"moto\">\n          Become a influencer by your style\n          <span class=\"fa fa-star\"></span>\n        </li>\n      </ul>\n    </h3>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdvertisementService {\n  private advertisementUrl = 'http://localhost:3000/api/advertisement';\n\n  constructor(private http: HttpClient) {}\n\n  register(data) {\n    return this.http\n      .post(this.advertisementUrl, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  getAdvertisement(country, years) {\n    return this.http\n      .get(this.advertisementUrl+\"/\" +country+\"/\"+years)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private loginUrl = 'http://localhost:3000/api/user/login';\n  private registerUrl = 'http://localhost:3000/api/user';\n  private disabledUserUrl = 'http://localhost:3000/api/user/disabledUserPost';\n\n  constructor(private http: HttpClient) {}\n\n  login(data) {\n    return this.http\n      .post(this.loginUrl, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  register(data) {\n    return this.http\n      .post(this.registerUrl, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n\n  disabledUser(header) {\n    return this.http\n      .post(this.disabledUserUrl, \"user\", { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpHeaders,\n  HttpClient,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewsService {\n  private postUrl = 'http://localhost:3000/api/post';\n  private searchPostUrl = 'http://localhost:3000/api/post/search';\n\n  constructor(private http: HttpClient) {}\n\n  submitPost(data, header) {\n    return this.http\n      .post(this.postUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  // submitPostWithPhoto(photo, header) {\n  //   console.log(photo);\n  //   this.http\n  //     .post('http://localhost:3000/api/post/testphoto', photo, {\n  //       headers: header,\n  //     })\n  //     .subscribe(\n  //       (data) => console.log(data),\n  //       (error) => console.log(error)\n  //     );\n  // }\n\n  getPosts(header) {\n    const username = jwt_decode(localStorage.getItem('token')).username;\n    return this.http\n      .get(this.postUrl + '/' + username, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  searchPost(data, header) {\n    return this.http\n      .post(this.searchPostUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  submitCommentUrl = 'http://localhost:3000/api/post/comment';\n  submitLikeUrl = 'http://localhost:3000/api/post/like';\n  submitUnlikeUrl = 'http://localhost:3000/api/post/unlike';\n\n  constructor(private http: HttpClient) {}\n\n  sendComment(data, header) {\n    return this.http\n      .post(this.submitCommentUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  submitLike(data, header) {\n    return this.http\n      .post(this.submitLikeUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  submitUnlike(data, header) {\n    return this.http\n      .post(this.submitUnlikeUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnhelthyWordService {\n  private unhealthyWordUrl = 'http://localhost:3000/api/unhealthy';\n  private deteteUnhealthyWordUrl = 'http://localhost:3000/api/unhealthy/delete';\n\n  constructor(private http: HttpClient) {}\n\n  register(data) {\n    return this.http\n      .post(this.unhealthyWordUrl, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  getUnhealthyWord() {\n    return this.http\n      .get(this.unhealthyWordUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  deleteUnhealthyWord(data) {\n    return this.http\n      .post(this.deteteUnhealthyWordUrl, data)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private getUserDataUrl = 'http://localhost:3000/api/user';\n  private searchUserUrl = 'http://localhost:3000/api/user/search';\n  private addFollowerUrl = 'http://localhost:3000/api/user/follower';\n  private getFollowerUrl = 'http://localhost:3000/api/user/follower';\n  private postUnfollowUrl = 'http://localhost:3000/api/user/unfollow';\n  private updateBadpostUrl = 'http://localhost:3000/api/user/updateBadPost';\n  private inactiveUserUrl = 'http://localhost:3000/api/user/getInactive';\n  private activeUserpostUrl = 'http://localhost:3000/api/user/activeUser';\n  private sendRequestActivatePostUrl = 'http://localhost:3000/api/user/requestActiveUser';\n  \n  private token: String;\n\n  constructor(private http: HttpClient) {\n    this.token = localStorage.getItem('token').toString();\n  }\n\n  getUserData(header) {\n    return this.http.get(this.getUserDataUrl, {\n      headers: header,\n    });\n  }\n\n  searchUser(data, header) {\n    return this.http\n      .post(\n        this.searchUserUrl,\n        { username: data['searchname'] },\n        { headers: header }\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  addFollower(data, header) {\n    console.log(data);\n    return this.http\n      .post(this.addFollowerUrl, { follower: data }, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error) {\n    if (error instanceof HttpErrorResponse) {\n      // Server side error\n      console.log('Server side error', error);\n    } else {\n      // client side error\n      console.log('Client side error', error);\n    }\n    return throwError(error);\n  }\n\n  getFollowingList(header) {\n    return this.http\n      .get(this.getFollowerUrl, { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  unfollow(unfollowed, header) {\n    const data = { unfollow: unfollowed };\n    return this.http\n      .post(this.postUnfollowUrl, data, { headers: header })\n      .pipe(catchError(this.handleError));\n\n    // .subscribe(\n    //   (data) => console.log(data),\n    //   (error) => {\n    //     console.log(error);\n    //   }\n    // );\n  }\n\n  increaseBadPost(header) {\n    return this.http\n      .post(this.updateBadpostUrl, \"user\", { headers: header })\n      .pipe(catchError(this.handleError));\n  }\n\n  getInactiveUser() {\n    return this.http\n      .get(this.inactiveUserUrl)\n      .pipe(catchError(this.handleError));\n  }\n\n  activeUserPost(item) {\n    return this.http\n      .post(this.activeUserpostUrl, {\"user\": item})\n      .pipe(catchError(this.handleError));\n  }\n\n  sendRequestActivatePost(header) {\n    return this.http\n      .post(this.sendRequestActivatePostUrl, \"user\", {headers: header})\n      .pipe(catchError(this.handleError));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UnhelthyWordService } from '../service/unhealthyword/unhealthyword.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  form: FormGroup;\n  formError: Boolean;\n  formErrorMessage: String;\n\n  ItemsArray = [];\n  constructor(private service: UnhelthyWordService) {\n    this.form = new FormGroup({\n      unhealthyWord: new FormControl(''),\n    });\n  }\n\n  newHealthyWord(formData) {\n    this.service.register(formData).subscribe(\n      (data) => {\n        this.ItemsArray.push({_id: data[\"unhealthyWordClass1\"][\"_id\"], unhealthyWord: data[\"unhealthyWordClass1\"][\"unhealthyWord\"]});\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getUnhealthyWord();\n  }\n\n  getUnhealthyWord() {\n    this.service.getUnhealthyWord().subscribe(\n      (data) => {\n        this.ItemsArray = data[\"unhealthyWordsList\"];\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  deleteRow(item) {\n    this.service.deleteUnhealthyWord(item).subscribe(\n      (data) => {\n        this.getUnhealthyWord();\n      },\n      (error) => {\n        console.log(error.error);\n        this.formErrorMessage = error.error;\n        this.formError = true;\n      }\n    );\n  }\n}\n","<div class=\"container border border-primary\">\n  <div class=\"row align-items-center\">\n    <h3>Unhealthy Words</h3>\n    <form\n          [formGroup]=\"form\"\n          (ngSubmit)=\"newHealthyWord(form.value)\"\n          class=\"form-inline\"\n        >\n          <div class=\"form-row align-items-center\">\n            <div class=\"form-group\">\n              <label>Unhealthy word:</label>\n              <input\n                formControlName=\"unhealthyWord\"\n                type=\"text\"\n                name=\"unhealthyWord\"\n                class=\"form-control\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">Send</button>\n            </div>\n          </div>\n        </form>\n  </div>\n</div>\n<table class=\"blueTable\">\n  <thead>\n     <tr>\n        <th style=\"display:none;\">#ID</th>\n        <th>Word</th>\n     </tr>\n  </thead>\n  <tbody>\n     <tr *ngFor=\"let item of ItemsArray\">\n        <th style=\"display:none;\">{{ item._id }}</th>\n        <td>{{ item.unhealthyWord }}</td>\n        <td>\n         <button  (click)=\"deleteRow(item)\" class=\"btn btn-primary\">Delete</button>\n        </td>\n     </tr>\n  </tbody>\n</table>","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../service/user/user.service';\nimport * as jwt_decode from 'jwt-decode';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FileUploader } from 'ng2-file-upload';\n\nlet imageUploadUrl = 'http://localhost:3000/api/user/photo';\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css'],\n})\nexport class UserDetailsComponent implements OnInit {\n  public uploader: FileUploader;\n\n  @Input() user;\n  userDetails;\n  username;\n  header;\n  token;\n  photoBaseUrl = 'http://localhost:3000/img/';\n  myForm = new FormGroup({\n    file: new FormControl(''),\n    fileSource: new FormControl(''),\n  });\n\n  constructor(private userService: UserService) {\n    this.token = localStorage.getItem('token').toString();\n    this.username = jwt_decode(localStorage.getItem('token')).username;\n    this.header = new HttpHeaders({\n      token: this.token.toString(),\n    });\n  }\n\n  ngOnInit(): void {\n    this.getUserDetails();\n    let photoUploadUrl =\n      'http://localhost:3000/api/user/photo/' + this.username;\n\n    this.uploader = new FileUploader({\n      url: photoUploadUrl,\n      itemAlias: 'file',\n    });\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    this.uploader.onCompleteItem = (\n      item: any,\n      response: any,\n      status: any,\n      headers: any\n    ) => {\n      console.log('File upload successfull', item, status, response);\n      alert('Successfully uploaded');\n      this.getUserDetails();\n    };\n  }\n\n  getUserDetails() {\n    this.userService.getUserData(this.header).subscribe(\n      (data) => {\n        this.userDetails = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <table class=\"table\">\n    <tr>\n      <td>Avatar:</td>\n      <td>\n        <div *ngIf=\"userDetails != null\">\n          <img class=\"img-fit\" [src]=\"userDetails.photo\" />\n        </div>\n        <br />\n        <input type=\"file\" name=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"uploader.uploadAll()\"\n          [disabled]=\"!uploader.getNotUploadedItems().length\"\n        >\n          Upload\n        </button>\n      </td>\n    </tr>\n    <tr>\n      <td>Username:</td>\n      <td *ngIf=\"userDetails != null\">{{ userDetails.username }}</td>\n    </tr>\n    <tr>\n      <td>Email:</td>\n      <td *ngIf=\"userDetails != null\">{{ userDetails.email }}</td>\n    </tr>\n    <tr>\n      <td>Birthday:</td>\n      <td *ngIf=\"userDetails != null\">\n        {{ userDetails.birthday.substr(0, 10) }}\n      </td>\n    </tr>\n    <tr>\n      <td>Country:</td>\n      <td *ngIf=\"userDetails != null\">{{ userDetails.country }}</td>\n    </tr>\n    <tr>\n      <td>Admin:</td>\n      <td *ngIf=\"userDetails != null\">{{ userDetails.isAdmin }}</td>\n    </tr>\n    <tr>\n      <td>Account status:</td>\n      <td *ngIf=\"userDetails != null\">\n        <div *ngIf=\"userDetails.isEnabled\">Enabled</div>\n        <div *ngIf=\"!userDetails.isEnabled\">Disabled</div>\n      </td>\n    </tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'user-operation',\n  templateUrl: './user-operation.component.html',\n  styleUrls: ['./user-operation.component.css'],\n})\nexport class UserOperationComponent implements OnInit {\n  username: String;\n  isAdmin = localStorage.getItem('isAdmin') == 'true' ? true : false;\n  isEnabled = localStorage.getItem(\"isEnabled\")=== 'true' ? true : false;\n  showUsername: String;\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.username = localStorage.getItem('token');\n    this.showUsername = jwt_decode(localStorage.getItem('token'))['username'];\n  }\n\n  changeToFollowing() {\n    return this.router.navigate(['home/following']);\n  }\n\n  changeToNews() {\n    return this.router.navigate(['home/news']);\n  }\n\n  changeToUserDetails() {\n    return this.router.navigate(['home/userdetails']);\n  }\n\n  changeToNewAdvertisement() {\n    return this.router.navigate(['home/home-admin']);\n  }\n\n  changeToNewUnhealthyWords() {\n    return this.router.navigate(['home/app-table']);\n  }\n\n  changeToManageUser() {\n    return this.router.navigate(['home/manage-user']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isAdmin');\n    this.router.navigate(['/']);\n  }\n\n  getUserVisible(){\n    return this.isAdmin || !this.isAdmin && !this.isEnabled;\n  }\n}\n","<div class=\"border\">\n  <ul\n    class=\"nav flex-column nav-pills\"\n    role=\"tablist\"\n    aria-orientation=\"vertical\"\n  >\n    <li class=\"nav-item\">\n      <a\n        routerLink=\"/home/userdetails\"\n        routerLinkActive=\"active\"\n        class=\"nav-link\"\n        role=\"tab\"\n        (click)=\"changeToUserDetails()\"\n        >{{ showUsername }} profile</a\n      >\n    </li>\n    <!--options user-->\n    <li class=\"nav-item\" *ngIf=\"!getUserVisible()\">\n      <a\n        routerLink=\"/home/news\"\n        class=\"nav-link\"\n        routerLinkActive=\"active\"\n        role=\"tab\"\n        (click)=\"changeToNews()\"\n        >Home</a\n      >\n    </li>\n    <li class=\"nav-item\" *ngIf=\"!getUserVisible()\">\n      <a\n        routerLink=\"/home/following\"\n        routerLinkActive=\"active\"\n        class=\"nav-link\"\n        role=\"tab\"\n        (click)=\"changeToFollowing()\"\n        >Following</a\n      >\n    </li>\n\n    <!--options admin-->\n    <li class=\"nav-item\" *ngIf=\"isAdmin\">\n      <a\n        routerLink=\"/home/home-admin\"\n        routerLinkActive=\"active\"\n        class=\"nav-link\"\n        role=\"tab\"\n        (click)=\"changeToNewAdvertisement()\"\n        >New Advertisement</a\n      >\n    </li>\n    <li class=\"nav-item\" *ngIf=\"isAdmin\">\n      <a\n        routerLink=\"/home/app-table\"\n        routerLinkActive=\"active\"\n        class=\"nav-link\"\n        role=\"tab\"\n        (click)=\"changeToNewUnhealthyWords()\"\n        >New Unhealthy Words</a\n      >\n    </li>\n    <li class=\"nav-item\" *ngIf=\"isAdmin\">\n      <a\n        routerLink=\"/home/manage-user\"\n        routerLinkActive=\"active\"\n        class=\"nav-link\"\n        role=\"tab\"\n        (click)=\"changeToManageUser()\"\n        >Active User</a\n      >\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"btn\" (click)=\"logout()\" role=\"tab\">\n        Logout\n      </button>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../service/user/user.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'userblock',\n  templateUrl: './userblock.component.html',\n  styleUrls: ['./userblock.component.css'],\n})\nexport class UserblockComponent implements OnInit {\n  @Input() users;\n  header: HttpHeaders;\n\n  constructor(private userService: UserService) {\n    this.header = new HttpHeaders({ token: localStorage.getItem('token') });\n  }\n\n  ngOnInit(): void {}\n\n  follow(follower) {\n    console.log('follow function');\n    this.userService.addFollower(follower, this.header).subscribe(\n      (data) => {\n        console.log(data);\n\n        for (let index in this.users) {\n          if (this.users[index]._id == follower) {\n            this.users[index].flwdFlg = true;\n            break;\n          }\n        }\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  unfollow(follower) {\n    console.log('unfollow function');\n    console.log(follower);\n\n    this.userService.unfollow(follower, this.header).subscribe(\n      (data) => {\n        console.log(data);\n        console.log(this.users);\n        for (let index in this.users) {\n          if (this.users[index]._id == follower) {\n            this.users[index].flwdFlg = false;\n            break;\n          }\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div *ngFor=\"let follower of users\">\n  <div class=\"container\">\n    <div class=\"border border-primary\">\n      <div class=\"row\">\n        <div class=\"border\">\n          <img class=\"img-fit\" [src]=\"follower.photo\" />\n        </div>\n        <table>\n          <tr>\n            <td>Username:</td>\n            <td>\n              <span #follower\n                ><b>{{ follower.username }}</b></span\n              >\n            </td>\n          </tr>\n          <tr>\n            <td>Country:</td>\n            <td>{{ follower.country }}</td>\n          </tr>\n          <tr>\n            <div *ngIf=\"follower.flwdFlg\">\n              <button\n                class=\"btn btn-secondary\"\n                type=\"button\"\n                (click)=\"unfollow(follower._id)\"\n              >\n                Unfollow\n              </button>\n            </div>\n            <div *ngIf=\"!follower.flwdFlg\">\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                (click)=\"follow(follower._id)\"\n              >\n                Follow\n              </button>\n            </div>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<navbar></navbar>\n<div class=\"container bg-light\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <sample-wish></sample-wish>\n    </div>\n    <div class=\"col\">\n      <register> </register>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}