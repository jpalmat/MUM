package edu.mum.rainbow.test;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import edu.mum.rainbow.business.batch.daily.DailyTransactionBatch;

@Component
public class TestDailyCallSummaryBatch {

	@Autowired
	private DailyTransactionBatch dailyTransactionBatch;

	public final static String[] configFiles = {  
			"/META-INF/spring/context/application-context.xml",
			"/META-INF/spring/context/data-access-context.xml","/META-INF/spring/integration/amqp-context.xml",
			"/META-INF/spring/context/security-context.xml", "/META-INF/spring/context/validation-context.xml",
			
			"/META-INF/spring/batch/batch-config.xml",
			"/META-INF/spring/batch/dailytransaction-job.xml","/META-INF/spring/batch/monthlyStatement-job.xml"};

	public static void main(String[] args) throws Throwable {

		ApplicationContext applicationContext = new ClassPathXmlApplicationContext(configFiles, TestDailyCallSummaryBatch.class);
		applicationContext.getBean(TestDailyCallSummaryBatch.class).mainInternal(applicationContext);
	}

	private void mainInternal(ApplicationContext applicationContext) throws Exception {

		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date date = new Date();
		System.out.println("Starting System " + dateFormat.format(date));

		// This "manual mode" ...
		// DailyCallSummaryBatch will be SCHEDULED if @Scheduled is on
		dailyTransactionBatch.startjob();

	}
}